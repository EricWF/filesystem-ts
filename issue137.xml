<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="137" status="TC1">
<title>Do use_facet and has_facet look in the global locale?</title>
<section><sref ref="[locale]"/></section>
<submitter>Angelika Langer</submitter>
<date>17 Mar 1999</date>

<discussion>
<p>Section <sref ref="[locale]"/> says:</p>

<p>-4- In the call to use_facet&lt;Facet&gt;(loc), the type argument
chooses a facet, making available all members of the named type. If
Facet is not present in a locale (or, failing that, in the global
locale), it throws the standard exception bad_cast. A C++ program can
check if a locale implements a particular facet with the template
function has_facet&lt;Facet&gt;(). </p>

<p>This contradicts the specification given in section 
<sref ref="[locale.global.templates]"/>:
<br/><br/>
template &lt;class&nbsp; Facet&gt; const&nbsp; Facet&amp; use_facet(const
locale&amp;&nbsp; loc); <br/>
<br/>
-1- Get a reference to a facet of a locale. <br/>
-2- Returns: a reference to the corresponding facet of loc, if present. <br/>
-3- Throws: bad_cast if has_facet&lt;Facet&gt;(loc) is false. <br/>
-4- Notes: The reference returned remains valid at least as long as any copy of loc exists
</p>
</discussion>

<resolution>
<p>Remove the phrase &quot;(or, failing that, in the global locale)&quot;
from section 22.1.1. </p>
</resolution>

<rationale>
<p>Needed for consistency with the way locales are handled elsewhere
in the standard.</p>
</rationale>
</issue>
