<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="2271" status="New">
<title><tt>regex_traits::lookup_classname</tt> specification unclear</title>
<section><sref ref="[re.traits]"/></section>
<submitter>Jonathan Wakely</submitter>
<date>2 Jul 2013</date>

<discussion>
<p>
<sref ref="[re.traits]"/> p9 says that <tt>regex_traits::lookup_classname</tt> should
return a value that compares equal to 0, but there is no requirement
that a bitmask type is equality comparable with 0, e.g. <sref ref="[bitmask.types]"/> says bitmask types 
can be implemented using <tt>std::bitset</tt>.
<p/>
Either there should be an additional requirement on the type or the function definition should be fixed.
</p>
</discussion>

<resolution>

<p>This wording is relative to N3691.</p>

<ol>
<li><p>Edit <sref ref="[re.traits]"/> p9:</p>

<blockquote>
<pre>
template &lt;class ForwardIterator&gt;
  char_class_type lookup_classname(
    ForwardIterator first, ForwardIterator last, bool icase = false) const;
</pre>
<blockquote>
<p>
-9- <i>Returns:</i> an unspecified value that represents the character classification named by the character
sequence designated by the iterator range <tt>[first,last)</tt>. If the parameter <tt>icase</tt> is true then the
returned mask identifies the character classification without regard to the case of the characters being
matched, otherwise it does honor the case of the characters being matched. The value returned shall
be independent of the case of the characters in the character sequence. If the name is not recognized
then returns <del>a value that compares equal to 0</del><ins><tt>char_class_type()</tt></ins>.
</p>
</blockquote>
</blockquote>
</li>
</ol>

</resolution>

</issue>
