<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="239" status="CD1">
<title>Complexity of unique() and/or unique_copy incorrect</title>
<section><sref ref="[alg.unique]"/></section>
<submitter>Angelika Langer</submitter>
<date>15 May 2000</date>

<discussion>
<p>The complexity of unique and unique_copy are inconsistent with each
other and inconsistent with the implementations.&nbsp; The standard
specifies:</p>

<p>for unique():</p>

<blockquote><p>-3- Complexity: If the range (last - first) is not empty, exactly
(last - first) - 1 applications of the corresponding predicate, otherwise
no applications of the predicate.</p></blockquote>

<p>for unique_copy():</p>

<blockquote><p>-7- Complexity: Exactly last - first applications of the corresponding
predicate.</p></blockquote>

<p>
The implementations do it the other way round: unique() applies the
predicate last-first times and unique_copy() applies it last-first-1
times.</p>

<p>As both algorithms use the predicate for pair-wise comparison of
sequence elements I don't see a justification for unique_copy()
applying the predicate last-first times, especially since it is not
specified to which pair in the sequence the predicate is applied
twice.</p>
</discussion>

<resolution>
<p>Change both complexity sections in <sref ref="[alg.unique]"/> to:</p>

<blockquote><p>Complexity: For nonempty ranges, exactly last - first - 1
applications of the corresponding predicate.</p></blockquote>

</resolution>

</issue>
