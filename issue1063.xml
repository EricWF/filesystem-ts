<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [
  <!ENTITY nbsp "&#160;">
] >

<issue num="1063" status="NAD Concepts">
<title>03 iterator compatibilty</title>
<section><sref ref="[iterator.backward]"/></section>
<submitter>Alisdair Meredith</submitter>
<date>15 Mar 2009</date>

<discussion>

<p>
Which header must a user <tt>#include</tt> to obtain the library-supplied
<tt>concept_maps</tt> declared in this paragraph?
</p>

<p>
This is important information, as existing user code will break if this
header is not included, and we should make a point of mandating this header
is <tt>#include</tt>-d by library headers likely to make use of it, notably
<tt>&lt;algorithm&gt;</tt>.  See issue <iref ref="1001"/> for more details.
</p>

<note>
Batavia (2009-05):
</note>
<blockquote><p>
We agree with the direction of the proposed resolution.
Move to Tentatively Ready.
</p></blockquote>

<note>
2009-07 Frankfurt
</note>

<blockquote><p>
We believe this is NAD Concepts, but this needs to be reviewed against the
post-remove-concepts draft.
</p></blockquote>
</discussion>

<resolution>
<p><i>Change <sref ref="[depr.lib.iterator.primitives]"/>, Iterator primitives, as
indicated:</i></p>

<blockquote>
  <p>To simplify the use of iterators and provide backward compatibility with
  previous C++ Standard Libraries,
  the library provides several classes and functions. <ins>Unless otherwise
  specified, these classes and functions shall be defined in header <tt>&lt;iterator&gt;</tt>.</ins></p>
</blockquote>
<p><i>Change <sref ref="[iterator.backward]"/>, Iterator backward compatibility, as
indicated:</i></p>
<blockquote>
  <p>The library provides concept maps that allow iterators specified with
  <tt>iterator_traits</tt> to interoperate with
  algorithms that require iterator concepts. <ins>These concept maps shall be
  defined in the same header that defines the iterator.</ins> [<i>Example:</i></p>
</blockquote>
</resolution>

</issue>
