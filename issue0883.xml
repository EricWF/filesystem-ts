<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="883" status="C++11">
<title>swap circular definition</title>
<section><sref ref="[containers]"/></section>
<submitter>Alisdair Meredith</submitter>
<date>10 Sep 2008</date>

<discussion>

<p>
Note in particular that Table 90 "Container Requirements" gives
semantics of <tt>a.swap(b)</tt> as <tt>swap(a,b)</tt>, yet for all
containers we define <tt>swap(a,b)</tt> to call <tt>a.swap(b)</tt> - a
circular definition.
</p>

<note>
San Francisco:
</note>

<blockquote><p>
Robert to propose a resolution along the lines of "Postcondition: "a = b, b = a" 
This will be a little tricky for the hash containers, since they don't have 
<tt>operator==</tt>.
</p></blockquote>

<note>
Post Summit Anthony Williams provided proposed wording.
</note>

<note>
2009-07 Frankfurt
</note>

<blockquote><p>
Moved to Ready with minor edits (which have been made).
</p></blockquote>

</discussion>

<resolution>
<p>
In table 80 in section <sref ref="[container.requirements.general]"/>,
replace the postcondition of <tt>a.swap(b)</tt> with the following:
</p>

<blockquote>
<table border="1">
<caption>Table 80 -- Container requirements</caption>
<tr>
<th>Expression</th>
<th>Return type</th>
<th>Operational semantics</th>
<th>Assertion/note pre-/post-conidtion</th>
<th>Complexity</th>
</tr>
<tr>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
</tr>
<tr>
<td><tt>a.swap(b);</tt></td>
<td><tt>void</tt></td>
<td>&nbsp;</td>
<td><del><tt>swap(a,b)</tt></del>
<ins>Exchange the contents of <tt>a</tt> and <tt>b</tt>.</ins></td>
<td>(Note A)</td>
</tr>
</table>
</blockquote>

<p>
Remove the reference to swap from the paragraph following the table.
</p>

<blockquote><p>
Notes: the algorithms <del><tt>swap()</tt>, </del><tt>equal()</tt> and
<tt>lexicographical_compare()</tt> are defined in Clause 25. ...
</p></blockquote>
</resolution>

</issue>
