<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="367" status="NAD">
<title>remove_copy/remove_copy_if and Input Iterators</title>
<section><sref ref="[alg.remove]"/></section>
<submitter>Anthony Williams</submitter>
<date>13 May 2002</date>

<discussion>
<p>
remove_copy and remove_copy_if (<sref ref="[alg.remove]"/>) permit their
input range to be marked with Input Iterators. However, since two
operations are required against the elements to copy (comparison and
assigment), when the input range uses Input Iterators, a temporary
copy must be taken to avoid dereferencing the iterator twice. This
therefore requires the value type of the InputIterator to be
CopyConstructible. If the iterators are at least Forward Iterators,
then the iterator can be dereferenced twice, or a reference to the
result maintained, so the temporary is not required.
</p>
</discussion>

<resolution>
<p>
Add "If InputIterator does not meet the requirements of forward
iterator, then the value type of InputIterator must be copy
constructible. Otherwise copy constructible is not required." to
<sref ref="[alg.remove]"/> paragraph 6.
</p>
</resolution>

<rationale>
<p>The assumption is that an input iterator can't be dereferenced
  twice.  There's no basis for that assumption in the Standard.</p>
</rationale>

</issue>
