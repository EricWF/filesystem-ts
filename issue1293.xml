<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="1293" status="Resolved">
<title><tt>unique_ptr&lt;T[], D&gt;</tt> needs to get rid of <i>unspecified-pointer-type</i></title>
<section><sref ref="[unique.ptr.runtime]"/></section>
<submitter>Daniel Kr&uuml;gler</submitter>
<date>20 Dec 2009</date>

<discussion>
<p><b>Addresses UK 211</b></p>

<p>
As a response to UK 211 LWG issue <iref ref="1021"/> has replaced the
<i>unspecified-pointer-type</i> by <tt>nullptr_t</tt> to allow assignment of
type-safe null-pointer literals in the non-array form of
<tt>unique_ptr::operator=</tt>, but did not the same for the specialization for
arrays of runtime length. But without this parallel change of the signature we
have a status quo, where <tt>unique_ptr&lt;T[], D&gt;</tt> declares a member
function which is completely unspecified.
</p>

<note>
2009-12-21 Moved to Tentatively Ready after 5 positive votes on c++std-lib.
</note>

<note>
2010-03-14 Howard adds:
</note>

<blockquote>
We moved
<a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2010/n3073.html">N3073</a>
to the formal motions page in Pittsburgh which should obsolete this issue.  I've
moved this issue to NAD Editorial, solved by N3073.
</blockquote>

</discussion>

<rationale>
<p>
Solved by <a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2010/n3073.html">N3073</a>.
</p>
</rationale>

<resolution>
<p>
In <sref ref="[unique.ptr.runtime]"/>, class template <tt>unique_ptr&lt;T[],
D&gt;</tt> synopsis, change as indicated:
</p>

<blockquote><pre>
// assignment
unique_ptr&amp; operator=(unique_ptr&amp;&amp; u);
unique_ptr&amp; operator=(<del><i>unspecified-pointer-type</i></del><ins>nullptr_t</ins>);
</pre></blockquote>

</resolution>

</issue>
