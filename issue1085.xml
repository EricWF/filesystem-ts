<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="1085" status="NAD Concepts">
<title>Response to UK 258</title>
<section><sref ref="[bidirectional.iterators]"/></section>
<submitter>Howard Hinnant</submitter>
<date>22 Mar 2009</date>

<discussion>
<p><b>Addresses UK 258</b></p>

<p>
A default implementation should be supplied for the post-decrement
operator to simplify implementation of iterators by users.
</p>

<p>
Copy the Effects clause into the concept description as the default
implementation. Assumes a default value for postincrement_result
</p>

<note>
Summit:
</note>
<blockquote>
Howard will open an issue.
</blockquote>

<note>
2009-06-07 Daniel adds:
</note>

<blockquote>
This issue cannot currently be resolved as suggested, because
that would render auto-detection of the return type
<tt>postdecrement_result</tt> invalid, see <iref ref="1084"/>.
</blockquote>
</discussion>

<resolution>

<p>
Change <sref ref="[bidirectional.iterators]"/>:
</p>

<blockquote>
<pre>
concept BidirectionalIterator&lt;typename X&gt; : ForwardIterator&lt;X&gt; { 
  MoveConstructible postdecrement_result; 
  requires HasDereference&lt;postdecrement_result&gt; 
        &amp;&amp; Convertible&lt;HasDereference&lt;postdecrement_result&gt;::result_type, const value_type&amp;&gt; 
        &amp;&amp; Convertible&lt;postdecrement_result, const X&amp;&gt;; 
  X&amp; operator--(X&amp;); 
  postdecrement_result operator--(X&amp; <ins>r</ins>, int)<del>;</del> <ins>{
     X tmp = r;
     --r;
     return tmp;
  }</ins>
}
</pre></blockquote>

</resolution>

</issue>
