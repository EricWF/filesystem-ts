<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="770" status="CD1">
<title>std::function should use rvalue swap</title>
<section><sref ref="[func.wrap]"/></section>
<submitter>Daniel Kr&uuml;gler</submitter>
<date>10 Jan 2008</date>

<discussion>
<p>
It is expected that typical implementations of <tt>std::function</tt> will
use dynamic memory allocations at least under given conditions,
so it seems appropriate to change the current lvalue swappabilty of
this class to rvalue swappability.
</p>
</discussion>

<resolution>
<p>
In <sref ref="[function.objects]"/>, header <tt>&lt;functional&gt;</tt> synopsis, just below of
</p>

<blockquote><pre>
template&lt;class R, class... ArgTypes&gt;
  void swap(function&lt;R(ArgTypes...)&gt;&amp;, function&lt;R(ArgTypes...)&gt;&amp;);
<ins>template&lt;class R, class... ArgTypes&gt;
  void swap(function&lt;R(ArgTypes...)&gt;&amp;&amp;, function&lt;R(ArgTypes...)&gt;&amp;);
template&lt;class R, class... ArgTypes&gt;
  void swap(function&lt;R(ArgTypes...)&gt;&amp;, function&lt;R(ArgTypes...)&gt;&amp;&amp;);</ins>
</pre></blockquote>

<p>
In <sref ref="[func.wrap.func]"/> class <tt>function</tt> definition, change
</p>

<blockquote><pre>
void swap(function&amp;<ins>&amp;</ins>);
</pre></blockquote>

<p>
In <sref ref="[func.wrap.func]"/>, just below of
</p>

<blockquote><pre>
template &lt;class R, class... ArgTypes&gt;
  void swap(function&lt;R(ArgTypes...)&gt;&amp;, function&lt;R(ArgTypes...)&gt;&amp;);
<ins>template &lt;class R, class... ArgTypes&gt;
  void swap(function&lt;R(ArgTypes...)&gt;&amp;&amp;, function&lt;R(ArgTypes...)&gt;&amp;);
template &lt;class R, class... ArgTypes&gt;
  void swap(function&lt;R(ArgTypes...)&gt;&amp;, function&lt;R(ArgTypes...)&gt;&amp;&amp;);</ins>
</pre></blockquote>

<p>
In <sref ref="[func.wrap.func.mod]"/> change
</p>

<blockquote><pre>
void swap(function&amp;<ins>&amp;</ins> other);
</pre></blockquote>

<p>
In <sref ref="[func.wrap.func.alg]"/> add the two overloads
</p>

<blockquote><pre>
<ins>template&lt;class R, class... ArgTypes&gt;
  void swap(function&lt;R(ArgTypes...)&gt;&amp;&amp; f1, function&lt;R(ArgTypes...)&gt;&amp; f2);
template&lt;class R, class... ArgTypes&gt;
  void swap(function&lt;R(ArgTypes...)&gt;&amp; f1, function&lt;R(ArgTypes...)&gt;&amp;&amp; f2);</ins>
</pre></blockquote>

</resolution>

</issue>
