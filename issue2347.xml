<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="2347" status="New">
<title><tt>reverse_iterator::operator[]</tt> calls const version of <tt>current[]</tt></title>
<section><sref ref="[reverse.iter.opindex]"/></section>
<submitter>Timo Bingmann</submitter>
<date>11 Nov 2013</date>

<discussion>
<p>
Currently <tt>reverse_iterator::operator[]()</tt> returns "<tt>current[-n-1]</tt>" and has
an "<em>unspecified</em>" return type.
<p/>
When <tt>Iterator</tt> is a mutable random access iterator, the expression
"<tt>current[-n-1]</tt>" calls "<tt>Iterator::operator[] const</tt>", which returns a
const reference. This const reference cannot be converted back to a
mutable reference.
<p/>
This issue is related to the "<em>unspecified</em>" return value of
<tt>reverse_iterator::operator[]</tt>, see defect <iref ref="386"/>.
<p/>
The -1 is due to "current" pointing one item beyond the
<tt>reverse_iterator</tt>'s real current value.
<p/>
The current libstdc++ implementation reads "<tt>*(current + n)</tt>" for
<tt>reverse_iterator::operator[]</tt>.
<p/>
This copied <tt>current</tt>, advances (backwards) via <tt>operator+</tt> and
dereferences. It bypasses the issues due to <tt>reverse_iterator::operator[]</tt>
being const by copying the iterator.
</p>

</discussion>

<resolution>
<p>This wording is relative to N3797.</p>

<ol>
<li><p>Edit <sref ref="[reverse.iterator]"/>, class template <tt>reverse_iterator</tt> synopsis, as indicated:</p>

<blockquote><pre>
namespace std {
  template &lt;class Iterator&gt;
  class reverse_iterator : public
  iterator&lt;typename iterator_traits&lt;Iterator&gt;::iterator_category,
    typename iterator_traits&lt;Iterator&gt;::value_type,
    typename iterator_traits&lt;Iterator&gt;::difference_type,
    typename iterator_traits&lt;Iterator&gt;::pointer,
    typename iterator_traits&lt;Iterator&gt;::reference> {
  public:
    [&hellip;]
    <del><em>unspecified</em></del><ins>reference</ins> operator[](difference_type n) const;
    [&hellip;]
  };
  [&hellip;]
}
</pre></blockquote>
</li>

<li><p>Edit <sref ref="[reverse.iter.opindex]"/> as indicated:</p>

<blockquote><pre>
<del><em>unspecified</em></del><ins>reference</ins> operator[](
  typename reverse_iterator&lt;Iterator&gt;::difference_type n) const;
</pre><blockquote>
<p>
-1- <i>Returns:</i> <tt><del>current[-n-1]</del><ins>*(current + n)</ins></tt>.
</p>
</blockquote></blockquote>
</li>

</ol>

</resolution>

</issue>
