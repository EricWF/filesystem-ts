<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="355" status="CD1">
<title>Operational semantics for a.back()</title>
<section><sref ref="[sequence.reqmts]"/></section>
<submitter>Yaroslav Mironov</submitter>
<date>23 Jan 2002</date>

<discussion>

<p>Table 68 &quot;Optional Sequence Operations&quot; in 23.1.1/12
specifies operational semantics for &quot;a.back()&quot; as
&quot;*--a.end()&quot;, which may be ill-formed <i>[because calling
operator-- on a temporary (the return) of a built-in type is
ill-formed]</i>, provided a.end() returns a simple pointer rvalue
(this is almost always the case for std::vector::end(), for
example). Thus, the specification is not only incorrect, it
demonstrates a dangerous construct: &quot;--a.end()&quot; may
successfully compile and run as intended, but after changing the type
of the container or the mode of compilation it may produce
compile-time error. </p>

</discussion>

<resolution>
<p>Change the specification in table 68 &quot;Optional Sequence
Operations&quot; in 23.1.1/12 for &quot;a.back()&quot; from</p>


<blockquote><pre>
*--a.end()
</pre></blockquote>

<p>to</p>

<blockquote><pre>
  { iterator tmp = a.end(); --tmp; return *tmp; }
</pre></blockquote>

<p>and the specification for "a.pop_back()" from</p>

<blockquote><pre>
a.erase(--a.end())
</pre></blockquote>

<p>to</p>

<blockquote><pre>
  { iterator tmp = a.end(); --tmp; a.erase(tmp); }
</pre></blockquote>

<note>Cura&ccedil;ao: LWG changed PR from &quot;{ X::iterator tmp =
a.end(); return *--tmp; }&quot; to &quot;*a.rbegin()&quot;, and from
&quot;{ X::iterator tmp = a.end(); a.erase(--tmp); }&quot; to
&quot;a.erase(rbegin())&quot;.</note>

<note>There is a second possible defect; table 68 &quot;Optional
Sequence Operations&quot; in the &quot;Operational Semantics&quot;
column uses operations present only in the &quot;Reversible
Container&quot; requirements, yet there is no stated dependency
between these separate requirements tables. Ask in Santa Cruz if the
LWG would like a new issue opened.</note>

<note>Santa Cruz: the proposed resolution is even worse than what's in
  the current standard: erase is undefined for reverse iterator.  If
  we're going to make the change, we need to define a temporary and
  use operator--.  Additionally, we don't know how prevalent this is:
  do we need to make this change in more than one place?  Martin has
  volunteered to review the standard and see if this problem occurs
  elsewhere.</note>

<note>Oxford: Matt provided new wording to address the concerns raised
  in Santa Cruz.  It does not appear that this problem appears
  anywhere else in clauses 23 or 24.</note>

<note>Kona: In definition of operational semantics of back(), change
"*tmp" to "return *tmp;"</note>

</resolution>

</issue>
