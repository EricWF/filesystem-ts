<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="2041" status="WP">
<title>Stage 2 accumulate incompatibilty</title>
<section><sref ref="[facet.num.get.virtuals]"/></section>
<submitter>Howard Hinnant</submitter>
<date>9 Mar 2011</date>

<discussion>
<p><tt>num_get</tt> Stage 2 accumulation changed between C++03 and the current C++0x working draft. The sentences:</p>

<blockquote><p>
If it is not discarded, then a check is made to determine if <tt>c</tt> is allowed as the
next character of an input field of the conversion specifier returned by stage 1.
If so it is accumulated.
</p></blockquote>

<p>have been dropped from <sref ref="[facet.num.get.virtuals]"/>, Stage 2, paragraph 3 that begins:</p>

<blockquote><p>
If <tt>discard</tt> is true, [&hellip;]
</p></blockquote>

<p>Consider this code:</p>

<blockquote><pre>
#include &lt;sstream&gt;
#include &lt;iostream&gt;

int main(void)
{
   std::istringstream s("8cz");
   long i = 0;
   char c;
   s &gt;&gt; i;
   if (!s.fail())
       std::cout &lt;&lt; "i = " &lt;&lt; i &lt;&lt; '\n';
   else
   {
       std::cout &lt;&lt; "s &gt;&gt; i failed\n";
       s.clear();
   }
   s &gt;&gt; c;
   if (!s.fail())
       std::cout &lt;&lt; "c = " &lt;&lt; c &lt;&lt; '\n';
   else
       std::cout &lt;&lt; "s &gt;&gt; c failed\n";
}
</pre></blockquote>

<p>C++0x currently prints out:</p>

<blockquote><pre>
s &gt;&gt; i failed
c = z
</pre></blockquote>

<p>However C++03 conforming implementations will output:</p>

<blockquote><pre>
i = 8
c = c
</pre></blockquote>

<p>I believe we need to restore C++03 compatibility.</p>

</discussion>

<resolution>

<p>Add to <sref ref="[facet.num.get.virtuals]"/>, Stage 2:</p>

<blockquote><p>
If <tt>discard</tt> is true, then if <tt>'.'</tt> has not yet been accumulated, then the position of the character
is remembered, but the character is otherwise ignored. Otherwise, if <tt>'.'</tt> has already been
accumulated, the character is discarded and Stage 2 terminates. <ins>If it is not discarded, then a 
check is made to determine if <tt>c</tt> is allowed as the next character of an input field of the 
conversion specifier returned by stage 1. If so it is accumulated.</ins>
<p/>
If the character is either discarded or accumulated then in is advanced by <tt>++in</tt> and processing
returns to the beginning of stage 2.
</p></blockquote>
</resolution>

</issue>
