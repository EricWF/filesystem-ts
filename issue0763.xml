<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="763" status="NAD">
<title>Renaming <tt>emplace()</tt> overloads</title>
<section><sref ref="[associative.reqmts]"/></section>
<submitter>Sylvain Pion</submitter>
<date>4 Dec 2007</date>

<discussion>
<p>
The associative containers provide 2 overloads of <tt>emplace()</tt>:
</p>

<blockquote><pre>
template &lt;class... Args&gt; pair&lt;iterator, bool&gt; emplace(Args&amp;&amp;... args);
template &lt;class... Args&gt; iterator emplace(const_iterator position, Args&amp;&amp;... args);
</pre></blockquote>

<p>
This is a problem if you mean the first overload while passing
a <tt>const_iterator</tt> as first argument.
</p>

<note>
Related to <iref ref="767"/>
</note>

<note>
Bellevue:
</note>

<p>
This can be disambiguated by passing "begin" as the first argument in
the case when the non-default choice is desired. We believe that desire
will be rare.
</p>

<note>For related discussion see <iref ref="1302"/></note>

<p>
LWG <a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2680.pdf">N2680</a> 
renamed one of the overloads to <tt>emplace_hint</tt>.
</p>

<p>
Resolution: Change state to NAD.
</p>
</discussion>

<resolution>
<p>
Rename one of the two overloads.
For example to <tt>emplace_here</tt>, <tt>hint_emplace</tt>...
</p>
</resolution>

</issue>
