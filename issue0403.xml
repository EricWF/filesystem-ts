<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="403" status="CD1">
<title>basic_string::swap should not throw exceptions</title>
<section><sref ref="[string::swap]"/></section>
<submitter>Beman Dawes</submitter>
<date>25 Mar 2003</date>

<discussion>

<p>
std::basic_string, <sref ref="[basic.string]"/> paragraph 2 says that
basic_string "conforms to the requirements of a Sequence, as specified
in (23.1.1)." The sequence requirements specified in (23.1.1) to not
include any prohibition on swap members throwing exceptions.
</p>

<p>
Section <sref ref="[container.requirements]"/> paragraph 10 does limit conditions under
which exceptions may be thrown, but applies only to "all container
types defined in this clause" and so excludes basic_string::swap
because it is defined elsewhere.
</p>

<p>
Eric Niebler points out that <sref ref="[basic.string]"/> paragraph 5 explicitly
permits basic_string::swap to invalidates iterators, which is
disallowed by <sref ref="[container.requirements]"/> paragraph 10. Thus the standard would
be contradictory if it were read or extended to read as having
basic_string meet <sref ref="[container.requirements]"/> paragraph 10 requirements.
</p>

<p>
Yet several LWG members have expressed the belief that the original
intent was that basic_string::swap should not throw exceptions as
specified by <sref ref="[container.requirements]"/> paragraph 10, and that the standard is
unclear on this issue. The complexity of basic_string::swap is
specified as "constant time", indicating the intent was to avoid
copying (which could cause a bad_alloc or other exception). An
important use of swap is to ensure that exceptions are not thrown in
exception-safe code.
</p>

<p>
Note: There remains long standing concern over whether or not it is
possible to reasonably meet the <sref ref="[container.requirements]"/> paragraph 10 swap
requirements when allocators are unequal. The specification of
basic_string::swap exception requirements is in no way intended to
address, prejudice, or otherwise impact that concern.
</p>





</discussion>

<resolution>
<p>
In <sref ref="[string::swap]"/>, add a throws clause:
</p>

<p>
Throws: Shall not throw exceptions.
</p>
</resolution>

</issue>
