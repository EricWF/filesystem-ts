<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [
  <!ENTITY nbsp "&#160;">
] >

<issue num="1401" status="Open">
<title>[FCD] <tt>unique_ptr&lt;T&gt; == nullptr</tt></title>
<section><sref ref="[memory]"/></section>
<submitter>BSI</submitter>
<date>25 Aug 2010</date>

<discussion>
<p><b>Addresses GB-99</b></p>
<p>
One reason that the <tt>unique_ptr</tt> constructor taking a
<tt>nullptr_t</tt> argument is not <tt>explicit</tt> is to allow conversion
of <tt>nullptr</tt> to <tt>unique_ptr</tt> in contexts like equality
comparison. Unfortunately <tt>operator==</tt> for <tt>unique_ptr</tt> is a
little more clever than that, deducing template parameters for both
arguments. This means that <tt>nullptr</tt> does not get deduced
as <tt>unique_ptr</tt> type, and there are no other comparison
functions to match.
</p>

<note>
Resolution proposed by ballot comment:
</note>
<blockquote>
Add the following signatures to <sref ref="[memory]"/> p.1, <tt>&lt;memory&gt;</tt>
header synopsis:
<blockquote><pre>
template&lt;typename T, typename D&gt;
bool operator==(const unique_ptr&lt;T, D&gt; &amp; lhs, nullptr_t);
template&lt;typename T, typename D&gt;
bool operator==(nullptr_t, const unique_ptr&lt;T, D&gt; &amp; rhs);
template&lt;typename T, typename D&gt;
bool operator!=(const unique_ptr&lt;T, D&gt; &amp; lhs, nullptr_t);
template&lt;typename T, typename D&gt;
bool operator!=(nullptr_t, const unique_ptr&lt;T, D&gt; &amp; rhs);
</pre></blockquote>
</blockquote>
</discussion>

<resolution>
</resolution>

</issue>
