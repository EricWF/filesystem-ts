<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="214" status="CD1">
<title>set::find() missing const overload</title>
<section><sref ref="[set]"/> <sref ref="[multiset]"/></section>
<submitter>Judy Ward</submitter>
<date>28 Feb 2000</date>

<discussion>
<p>The specification for the associative container requirements in
Table 69 state that the find member function should &quot;return
iterator; const_iterator for constant a&quot;. The map and multimap
container descriptions have two overloaded versions of find, but set
and multiset do not, all they have is:</p>
<blockquote>
  <pre>iterator find(const key_type &amp; x) const;</pre>
</blockquote>
</discussion>

<resolution>
<p>Change the prototypes for find(), lower_bound(), upper_bound(), and
equal_range() in section <sref ref="[set]"/> and section <sref ref="[multiset]"/> to each have two overloads:</p>
<blockquote>
  <pre>iterator find(const key_type &amp; x);
const_iterator find(const key_type &amp; x) const;</pre>
  <pre>iterator lower_bound(const key_type &amp; x);
const_iterator lower_bound(const key_type &amp; x) const;</pre>
  <pre>iterator upper_bound(const key_type &amp; x);
const_iterator upper_bound(const key_type &amp; x) const;</pre>
  <pre>pair&lt;iterator, iterator&gt; equal_range(const key_type &amp; x);
pair&lt;const_iterator, const_iterator&gt; equal_range(const key_type &amp; x) const;</pre>
</blockquote>

<note>Tokyo: At the request of the LWG, Judy Ward provided wording
extending the proposed resolution to lower_bound, upper_bound, and
equal_range.</note>
</resolution>

</issue>
