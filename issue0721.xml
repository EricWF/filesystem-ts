<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="721" status="NAD">
<title><tt>wstring_convert</tt> inconsistensies</title>
<section><sref ref="[conversions.string]"/></section>
<submitter>Bo Persson</submitter>
<date>27 Aug 2007</date>

<discussion>
<p>
Paragraph 3 says that the <tt>Codecvt</tt> template parameter shall meet the 
requirements of <tt>std::codecvt</tt>, even though <tt>std::codecvt</tt> itself cannot 
be used (because of a protected destructor).
</p>

<p>
How are we going to explain this code to beginning programmers?
</p>

<blockquote><pre>
template&lt;class I, class E, class S&gt;
struct codecvt : std::codecvt&lt;I, E, S&gt;
{
    ~codecvt()
    { }
};

void main()
{
    std::wstring_convert&lt;codecvt&lt;wchar_t, char, std::mbstate_t&gt; &gt; compiles_ok;
    
    std::wstring_convert&lt;std::codecvt&lt;wchar_t, char, std::mbstate_t&gt; &gt;   not_ok;
}
</pre></blockquote>

<note>
San Francisco:
</note>

<blockquote><p>
Bill will propose a resolution.
</p></blockquote>

<note>
2009-07 Frankfurt:
</note>

<blockquote>
<p>
codecvt isn't intended for beginning programmers. This is a regrettable
consequence of the original design of the facet.
</p>
<p>
Move to NAD.
</p>
</blockquote>
</discussion>

<resolution>
<p>
</p>
</resolution>

</issue>
