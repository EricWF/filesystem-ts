<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="872" status="C++11">
<title><tt>move_iterator::operator[]</tt> has wrong return type</title>
<section><sref ref="[move.iter.op.index]"/></section>
<submitter>Doug Gregor</submitter>
<date>21 Aug 2008</date>

<discussion>
<p>
<tt>move_iterator</tt>'s <tt>operator[]</tt> is declared as:
</p>

<blockquote><pre>
reference operator[](difference_type n) const;
</pre></blockquote>

<p>
This has the same problem that <tt>reverse_iterator</tt>'s <tt>operator[]</tt> used to
have: if the underlying iterator's <tt>operator[]</tt> returns a proxy, the
implicit conversion to <tt>value_type&amp;&amp;</tt> could end up referencing a temporary
that has already been destroyed. This is essentially the same issue that
we dealt with for <tt>reverse_iterator</tt> in DR <iref ref="386"/>.
</p>

<note>
2009-07-28 Reopened by Alisdair.  No longer solved by concepts.
</note>

<note>
2009-08-15 Howard adds:
</note>

<blockquote><p>
I recommend closing this as  a duplicate of <iref ref="1051"/> which addresses
this issue for both <tt>move_iterator</tt> and <tt>reverse_iterator</tt>.
</p></blockquote>

<note>
2009-10 Santa Cruz:
</note>

<blockquote><p>
Move to Ready. Note that if <iref ref="1051"/> is reopened, it may yield a
better resolution, but <iref ref="1051"/> is currently marked NAD.
</p></blockquote>

</discussion>

<resolution>
<p>
In <sref ref="[move.iterator]"/> and <sref ref="[move.iter.op.index]"/>, change the declaration of
<tt>move_iterator</tt>'s <tt>operator[]</tt> to:
</p>

<blockquote><pre>
<del>reference</del> <ins><i>unspecified</i></ins> operator[](difference_type n) const;
</pre></blockquote>

</resolution>

<rationale>
<note>
San Francisco:
</note>

<blockquote><p>
NAD Editorial, see
<a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2777.pdf">N2777</a>.
</p></blockquote>
</rationale>
</issue>
