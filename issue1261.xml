<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="1261" status="WP">
<title>Insufficent overloads for <tt>to_string</tt> / <tt>to_wstring</tt></title>
<section><sref ref="[string.conversions]"/></section>
<submitter>Christopher Jefferson</submitter>
<date>10 Nov 2009</date>

<discussion>
<p>
Reported on the gcc mailing list.
</p>

<blockquote>
The code "<tt>int i; to_string(i);</tt>" fails to compile, as
'<tt>int</tt>' is ambiguous between '<tt>long long</tt>' and '<tt>long
long unsigned</tt>'. It seems unreasonable to expect users to cast
numbers up to a larger type just to use <tt>to_string</tt>.
</blockquote>

<note>
2009-11-14 Moved to Tentatively Ready after 5 positive votes on c++std-lib.
</note>
</discussion>

<resolution>
<p>
<sref ref="[string.classes]"/>, change <tt>to_string</tt> and
<tt>to_wstring</tt> to:
</p>

<blockquote><pre>
<ins>string to_string(int val);</ins>
<ins>string to_string(unsigned val);</ins>
<ins>string to_string(long val);</ins>
<ins>string to_string(unsigned long val);</ins>
string to_string(long long val); 
string to_string(unsigned long long val); 
<ins>string to_string(float val);</ins>
<ins>string to_string(double val);</ins>
string to_string(long double val);

<ins>wstring to_wstring(int val);</ins>
<ins>wstring to_wstring(unsigned val);</ins>
<ins>wstring to_wstring(long val);</ins>
<ins>wstring to_wstring(unsigned long val);</ins>
wstring to_wstring(long long val); 
wstring to_wstring(unsigned long long val); 
<ins>wstring to_wstring(float val);</ins>
<ins>wstring to_wstring(double val);</ins>
wstring to_wstring(long double val);
</pre></blockquote>

<p>
In <sref ref="[string.conversions]"/>, paragraph 7, change to:
</p>

<blockquote><pre>
<ins>string to_string(int val);</ins>
<ins>string to_string(unsigned val);</ins>
<ins>string to_string(long val);</ins>
<ins>string to_string(unsigned long val);</ins>
string to_string(long long val); 
string to_string(unsigned long long val); 
<ins>string to_string(float val);</ins>
<ins>string to_string(double val);</ins>
string to_string(long double val);
</pre>

<blockquote>
7 <i>Returns:</i> each function returns a <tt>string</tt> object holding
the character representation of the value of its argument that would be
generated by calling <tt>sprintf(buf, fmt, val)</tt> with a format
specifier of <ins> <tt>"%d"</tt>, <tt>"%u"</tt>, <tt>"%ld"</tt>,
<tt>"%lu"</tt>, </ins> <tt>"%lld"</tt>, <tt>"%llu"</tt>,
<ins><tt>"%f"</tt>, <tt>"%f"</tt>,</ins> or <tt>"%Lf"</tt>, respectively,
where <tt>buf</tt> designates an internal character buffer of sufficient
size.
</blockquote>
</blockquote>

<p>
In <sref ref="[string.conversions]"/>, paragraph 14, change to:
</p>

<blockquote><pre>
<ins>wstring to_wstring(int val);</ins>
<ins>wstring to_wstring(unsigned val);</ins>
<ins>wstring to_wstring(long val);</ins>
<ins>wstring to_wstring(unsigned long val);</ins>
wstring to_wstring(long long val); 
wstring to_wstring(unsigned long long val); 
<ins>wstring to_wstring(float val);</ins>
<ins>wstring to_wstring(double val);</ins>
wstring to_wstring(long double val);
</pre>

<blockquote>
14	<i>Returns:</i> Each function returns a <tt>wstring</tt> object
holding the character representation of the value of its argument that
would be generated by calling <tt>swprintf(buf, buffsz, fmt, val)</tt>
with a format specifier of <ins> <tt>L"%d"</tt>, <tt>L"%u"</tt>,
<tt>L"%ld"</tt>, <tt>L"%lu"</tt>, </ins><tt>L"%lld"</tt>,
<tt>L"%llu"</tt>, <ins><tt>L"%f"</tt>, <tt>L"%f"</tt>,</ins> or
<tt>L"%Lf"</tt>, respectively, where <tt>buf</tt> designates an internal
character buffer of sufficient size <tt>buffsz</tt>.
</blockquote>
</blockquote>
</resolution>

</issue>
