<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="821" status="C++11">
<title>Minor cleanup : <tt>unique_ptr</tt></title>
<section><sref ref="[unique.ptr.runtime.modifiers]"/></section>
<submitter>Alisdair Meredith</submitter>
<date>30 Mar 2008</date>

<discussion>
<p>
Reading resolution of LWG issue <iref ref="673"/> I noticed the following:
</p>

<blockquote>
<pre>
void reset(<del>T*</del> <ins>pointer</ins> p = <del>0</del> <ins>pointer()</ins>);
</pre>

<p>
-1- <i>Requires:</i> Does not accept pointer types which are convertible
to <del><tt>T*</tt></del> <ins><tt>pointer</tt></ins> (diagnostic
required). [<i>Note:</i> One implementation technique is to create a private
templated overload. <i>-- end note</i>]
</p>
</blockquote>

<p>
This could be cleaned up by mandating the overload as a public deleted
function.  In addition, we should probably overload <tt>reset</tt> on <tt>nullptr_t</tt>
to be a stronger match than the deleted overload. Words...
</p>
</discussion>

<resolution>
<p>
Add to class template definition in <sref ref="[unique.ptr.runtime]"/>
</p>

<blockquote>
<pre>
// modifiers 
pointer release(); 
void reset(pointer p = pointer()); 
<ins>void reset( nullptr_t );</ins>
<ins>template&lt; typename U &gt; void reset( U ) = delete;</ins>
void swap(unique_ptr&amp;&amp; u);
</pre>
</blockquote>

<p>
Update <sref ref="[unique.ptr.runtime.modifiers]"/>
</p>

<blockquote>
<pre>
void reset(pointer p = pointer());
<ins>void reset(nullptr_t);</ins>
</pre>

<p>
<del>-1- <i>Requires:</i> Does not accept pointer types which are convertible
to <tt>pointer</tt> (diagnostic
required). [<i>Note:</i> One implementation technique is to create a private
templated overload. <i>-- end note</i>]</del>
</p>
<p>
<i>Effects:</i> If <tt>get() == nullptr</tt> there are no effects. Otherwise <tt>get_deleter()(get())</tt>. 
</p>
<p>...</p>
</blockquote>

<note>
Note this wording incorporates resolutions for <iref ref="806"/> (New) and <iref ref="673"/> (Ready).
</note>
</resolution>

</issue>
