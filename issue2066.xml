<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="2066" status="Tentatively Resolved">
<title>Missing specification of <tt>vector::resize(size_type)</tt></title>
<section><sref ref="[vector.capacity]"/></section>
<submitter>Rani Sharoni</submitter>
<date>29 Mar 2011</date>

<discussion>
<p>
In C++1x (N3090) there are two version of <tt>vector::resize</tt> &mdash; <sref ref="[vector.capacity]"/>:
</p>
<blockquote><pre>
void resize(size_type sz);
void resize(size_type sz, const T&amp; c);
</pre></blockquote>
<p>
The text in <sref ref="[vector.capacity]"/>&#47;12 only mentions "no effects on throw" for the
two args version of resize:
</p><blockquote><p>
<i>Requires</i>: If an exception is thrown other than by the move constructor
of a non-<tt>CopyConstructible</tt> <tt>T</tt> there are no effects.
</p></blockquote><p>
This seems like unintentional oversight since <tt>resize(size)</tt> is
semantically the same as <tt>resize(size, T())</tt>.
Additionally, the C++03 standard only specify single version of resize
with default for the second argument - 23.2.4:
</p>
<blockquote><pre>
void resize(size_type sz, T c = T());
</pre></blockquote>
<p>
Therefore not requiring same guarantees for both version of resize is
in fact a regression.
</p>

<note>2011-06-12: Daniel comments</note>

<p>The proposed resolution for issue <iref ref="2033"/> should solve this issue as well.</p>

<note>
2011 Bloomington
</note>

<p>
This issue will be resolved by issue <iref ref="2033"/>, and closed when this issue is applied. 
</p>

</discussion>

<resolution>
<p>Apply the proposed resolution of issue <iref ref="2033"/></p>
</resolution>

</issue>
