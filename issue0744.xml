<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="744" status="CD1">
<title>What is the lifetime of an exception pointed to by an <tt>exception_ptr</tt>?</title>
<section><sref ref="[propagation]"/></section>
<submitter>Alisdair Meredith</submitter>
<date>10 Oct 2007</date>

<discussion>
<p>
Without some lifetime guarantee, it is hard to know how this type can be
used.  Very specifically, I don't see how the current wording would
guarantee and <tt>exception_ptr</tt> caught at the end of one thread could be safely
stored and rethrown in another thread - the original motivation for this
API.
</p>
<p>
(Peter Dimov agreed it should be clearer, maybe a non-normative note to
explain?)
</p>

<note>
Bellevue:
</note>

<blockquote>
<p>
Agree the issue is real.
</p>
<p>
Intent is lifetime is similar to a shared_ptr (and we might even want to
consider explicitly saying that it is a shared_ptr&lt; unspecified type &gt;).
</p>
<p>
We expect that most implementations will use shared_ptr, and the
standard should be clear that the exception_ptr type is intended to be
something whose semantics are smart-pointer-like so that the user does
not need to worry about lifetime management. We still need someone to
draught those words - suggest emailing Peter Dimov.
</p>
<p>
Move to Open.
</p>
</blockquote>
</discussion>

<resolution>
<p>
Change <sref ref="[propagation]"/>/7:
</p>

<blockquote><p>
-7- Returns: An <tt>exception_ptr</tt> object that refers to the currently
handled exception or a copy of the currently handled exception, or a
null <tt>exception_ptr</tt> object if no exception is being handled.
<ins>The referenced object remains valid at least as long as there is an
<tt>exception_ptr</tt> that refers to it.</ins>
If the function needs to allocate memory and the attempt
fails, it returns an <tt>exception_ptr</tt> object that refers to an instance of
<tt>bad_alloc</tt>. It is unspecified whether the return values of two successive
calls to <tt>current_exception</tt> refer to the same exception object. [<i>Note:</i>
that is, it is unspecified whether <tt>current_exception</tt> creates a new copy
each time it is called. <i>--end note</i>]
</p></blockquote>
</resolution>

</issue>
