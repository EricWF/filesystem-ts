<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [
  <!ENTITY nbsp "&#160;">
] >

<issue num="938" status="C++11">
<title><tt>default_delete&lt;T[]&gt;::operator()</tt> should only accept <tt>T*</tt></title>
<section><sref ref="[unique.ptr.dltr.dflt1]"/></section>
<submitter>Howard Hinnant</submitter>
<date>7 Dec 2008</date>

<discussion>
<p>
Consider:
</p>

<blockquote><pre>
derived* p = new derived[3];
std::default_delete&lt;base[]&gt; d;
d(p);  <span style="color:#C80000">// should fail</span>
</pre></blockquote>

<p>
Currently the marked line is a run time failure.  We can make it a compile
time failure by "poisoning" <tt>op(U*)</tt>.
</p>

<note>
Post Summit:
</note>

<blockquote><p>
Recommend Review.
</p></blockquote>

<note>
Batavia (2009-05):
</note>
<blockquote><p>
We agree with the proposed resolution.
Move to Tentatively Ready.
</p></blockquote>
</discussion>

<resolution>
<p>
Add to <sref ref="[unique.ptr.dltr.dflt1]"/>:
</p>

<blockquote><pre>
namespace std {
  template &lt;class T&gt; struct default_delete&lt;T[]&gt; {
    void operator()(T*) const;
  <ins>template &lt;class U&gt; void operator()(U*) const = delete;</ins>
};
}
</pre></blockquote>
</resolution>

</issue>
