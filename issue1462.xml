<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [
  <!ENTITY nbsp "&#160;">
] >

<issue num="1462" status="Pending Resolved">
<title>[FCD] Ambiguous value assignment to <tt>atomic_bool</tt></title>
<section><sref ref="[atomics.types.integral]"/></section>
<submitter>BSI</submitter>
<date>25 Aug 2010</date>

<discussion>
<p><b>Addresses GB-132, US-157</b></p>

The <tt>atomic_<em>itype</em></tt> types and <tt>atomic_address</tt> have two
overloads of <tt>operator=</tt>; one is <tt>volatile</tt> qualified, and the
other is not. <tt>atomic_bool</tt> only has the <tt>volatile</tt> qualified
version:
<pre><blockquote>
bool operator=(bool) volatile;
</blockquote></pre>
On a non-<tt>volatile</tt>-qualified object this is ambiguous with
the deleted copy-assignment operator
<pre><blockquote>
atomic_bool&amp; operator=(atomic_bool const&amp;) = delete;
</blockquote></pre>
due to the need for a single standard conversion in each
case when assigning a bool to an <tt>atomic_bool</tt> as in:
<pre><blockquote>
atomic_bool b;
b = true;
</blockquote></pre>
The conversions are: 
<pre><blockquote>
atomic_bool&amp; &rarr; atomic_bool volatile&amp;
</blockquote></pre>
 vs 
<pre><blockquote>
bool &rarr; atomic_bool
</blockquote></pre>

<note>
Proposed resolution as of NB comment:
</note>

<p>
Change <sref ref="[atomics.types.integral]"/> as indicated:

<blockquote><pre>
namespace std {
  typedef struct atomic_bool {
    [..]
    bool operator=(bool) volatile;
    <ins>bool operator=(bool);</ins>
  } atomic_bool;
  [..]
}
</pre></blockquote>
</p>

<note>
2010-10-27 Daniel adds:
</note>

<blockquote>
Accepting <a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2010/n3164.html">n3164</a> would solve this issue
by replacing <tt>atomic_bool</tt> by <tt>atomic&lt;bool&gt;</tt>.
</blockquote>

<note>
2010 Batavia
</note>
<p>
Resolved by adoption of <a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2010/n3193.html">n3193</a>.
</p>
</discussion>

<resolution>
Solved by <a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2010/n3193.html">n3193</a>.
</resolution>

</issue>
