<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [
  <!ENTITY nbsp "&#160;">
] >

<issue num="1514" status="Tentatively Voting">
<title>[FCD] <tt>packaged_task</tt> constructors need review</title>
<section><sref ref="[futures.task.members]"/></section>
<submitter>INCITS</submitter>
<date>25 Aug 2010</date>

<discussion>
<p><b>Addresses US-207</b></p>
<p>
The constructor that takes <tt>R(*)(ArgTypes...)</tt> is not
needed; the constructor that takes a callable type works
for this argument type. More generally, the constructors
for packaged_task should parallel those for function.
</p>
<note>
US-207 Suggested Resolution:
</note>

<blockquote><p>
Review the constructors for packaged_task and
provide the same ones as function, except where
inappropriate.
</p></blockquote>

<note>
2010-10-22 Howard provides wording, as requested by the LWG in Rapperswil.
</note>

<note>2011-02-10 Reflector discussion</note>
<p>
Moved to Tentatively Ready after 5 votes.
</p>
</discussion>

<resolution>
<p>
Alter the list of constructors in both <sref ref="[futures.task]"/> and in <sref ref="[futures.task.members]"/> as indicated:
</p>
<blockquote>
<pre><del>template &lt;class F&gt;
explicit packaged_task(F f);
template &lt;class F, class Allocator&gt;
explicit packaged_task(allocator_arg_t, const Allocator&amp; a, F f);
explicit packaged_task(R(*f)(ArgTypes...));</del>
template &lt;class F&gt;
explicit packaged_task(F&amp;&amp; f);
template &lt;class F, class Allocator&gt;
explicit packaged_task(allocator_arg_t, const Allocator&amp; a, F&amp;&amp; f);
</pre>
</blockquote>
</resolution>

</issue>
