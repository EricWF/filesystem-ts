<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="554" status="NAD">
<title>Problem with lwg DR 184 numeric_limits&lt;bool&gt;</title>
<section><sref ref="[numeric.special]"/></section>
<submitter>Howard Hinnant</submitter>
<date>29 Jan 2006</date>

<discussion>
<p>
I believe we have a bug in the resolution of:
<a href="http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#184">lwg 184</a>
(WP status).
</p>

<p>
The resolution spells out each member of <tt>numeric_limits&lt;bool&gt;</tt>.
The part I'm having a little trouble with is:
</p>
<blockquote><pre>
static const bool traps = false;
</pre></blockquote>

<p>
Should this not be implementation defined?  Given:
</p>

<blockquote><pre>
int main()
{
     bool b1 = true;
     bool b2 = false;
     bool b3 = b1/b2;
}
</pre></blockquote>

<p>
If this causes a trap, shouldn't <tt>numeric_limits&lt;bool&gt;::traps</tt> be
<tt>true</tt>?
</p>
</discussion>

<resolution>
<p>
Change 18.2.1.5p3:
</p>

<blockquote><p>
-3- The specialization for <tt>bool</tt> shall be provided as follows: </p>
<blockquote><pre>
namespace std { 
   template &lt;&gt; class numeric_limits&lt;bool&gt; {
      ...
      static const bool traps = <del>false</del> <ins><i>implementation-defined</i></ins>;
      ...
   };
}
</pre></blockquote>
</blockquote>

<note>
Redmond:  NAD because traps refers to values, not operations.  There is no bool
value that will trap.
</note>

</resolution>

</issue>
