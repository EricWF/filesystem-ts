<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="853" status="WP">
<title><tt>to_string</tt> needs updating with <tt>zero</tt> and <tt>one</tt></title>
<section><sref ref="[template.bitset]"/></section>
<submitter>Howard Hinnant</submitter>
<date>18 Jun 2008</date>

<discussion>
<p>
Issue <iref ref="396"/> adds defaulted arguments to the <tt>to_string</tt> member, but neglects to update
the three newer <tt>to_string</tt> overloads.
</p>

<note>
post San Francisco:
</note>

<blockquote><p>
Daniel found problems with the wording and provided fixes.  Moved from Ready
to Review.
</p></blockquote>

<note>
Post Summit:
</note>

<blockquote>
<p>
Alisdair: suggest to not repeat the default arguments in B, C, D
(definition of to_string members)
</p>
<p>
Walter: This is not really a definition.
</p>
<p>
Consensus: Add note to the editor: Please apply editor's judgement
whether default arguments should be repeated for B, C, D changes.
</p>
<p>
Recommend Tentatively Ready.
</p>
</blockquote>

<note>
2009-05-09:  See alternative solution in issue <iref ref="1113"/>.
</note>

</discussion>

<resolution>
<ol style="list-style-type:upper-alpha">
<li>
<p>replace in <sref ref="[template.bitset]"/>/1 (class <tt>bitset</tt>)
</p>
<blockquote><pre>
template &lt;class charT, class traits&gt;
  basic_string&lt;charT, traits, allocator&lt;charT&gt; &gt;
  to_string(<ins>charT zero = charT('0'), charT one = charT('1')</ins>) const;
template &lt;class charT&gt;
  basic_string&lt;charT, char_traits&lt;charT&gt;, allocator&lt;charT&gt; &gt;
  to_string(<ins>charT zero = charT('0'), charT one = charT('1')</ins>) const;
basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;
  to_string(<ins>char zero = '0', char one = '1'</ins>) const;
</pre></blockquote>
</li>
<li>
<p>
replace in <sref ref="[bitset.members]"/>/37
</p>
<blockquote><pre>
template &lt;class charT, class traits&gt;
  basic_string&lt;charT, traits, allocator&lt;charT&gt; &gt;
  to_string(<ins>charT zero = charT('0'), charT one = charT('1')</ins>) const;
</pre>
<blockquote><p>
37 <i>Returns:</i> <tt>to_string&lt;charT, traits, allocator&lt;charT&gt; &gt;(<ins>zero, one</ins>)</tt>.
</p></blockquote>
</blockquote>
</li>
<li>
<p>
replace in <sref ref="[bitset.members]"/>/38
</p>

<blockquote><pre>
template &lt;class charT&gt;
  basic_string&lt;charT, char_traits&lt;charT&gt;, allocator&lt;charT&gt; &gt;
  to_string(<ins>charT zero = charT('0'), charT one = charT('1')</ins>) const;
</pre>
<blockquote><p>
38 <i>Returns:</i> <tt>to_string&lt;charT, char_traits&lt;charT&gt;, allocator&lt;charT&gt; &gt;(<ins>zero, one</ins>)</tt>.
</p></blockquote>
</blockquote>
</li>

<li>
<p>
replace in <sref ref="[bitset.members]"/>/39
</p>

<blockquote><pre>
basic_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;
  to_string(<ins>char zero = '0', char one = '1'</ins>) const;
</pre>
<blockquote><p>
39 <i>Returns:</i> <tt>to_string&lt;char, char_traits&lt;char&gt;, allocator&lt;char&gt; &gt;(<ins>zero, one</ins>)</tt>.
</p></blockquote>
</blockquote>
</li>

</ol>

</resolution>

</issue>
