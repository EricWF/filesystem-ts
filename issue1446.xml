<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [
  <!ENTITY nbsp "&#160;">
] >

<issue num="1446" status="Pending NAD">
<title>[FCD] Move and swap for I/O streams</title>
<section><sref ref="[iostream.format]"/></section>
<submitter>INCITS</submitter>
<date>25 Aug 2010</date>

<discussion>
<p><b>Addresses US-138</b></p>

For istreams and ostreams, the move-constructor does
not move-construct, the move-assignment operator does
not move-assign, and the swap function does not swap
because these operations do not manage the <tt>rdbuf()</tt>
pointer. Useful applications of these operations are
prevented both by their incorrect semantics and because
they are protected.

<note>
Resolution proposed by ballot comment:
</note>
<p>
In short: reverse the resolution of issue 900, then
change the semantics to move and swap the
<tt>rdbuf()</tt> pointer. Add a new protected constructor
that takes an rvalue reference to a stream and a
pointer to a streambuf, a new protected <tt>assign()</tt>
operator that takes the same arguments, and a
new protected <tt>partial_swap()</tt> function that doesn't
swap <tt>rdbuf()</tt>.
See Appendix 1 - Additional Details
</p>

<note>
2010-10-24 Daniel adds:
</note>

<blockquote>
Accepting <a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2010/n3179.pdf">n3179</a> would solve this issue.
</blockquote>

</discussion>

<resolution>
The Library Working Group reviewed <a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2010/n3179.pdf">n3179</a> and 
concluded that this change alone was not sufficient, as it would require changes to some of the derived stream types in the library.  
The preference is to not make such a broad fix, and retain the current semantics. This is closed as NAD rather than NAD future as it 
will be difficult to rename the new functions introduced in the C++0x revision of the standard at a later date.
</resolution>

</issue>
