<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="652" status="CD1">
<title>regex_iterator and const correctness</title>
<section><sref ref="[re.regiter]"/></section>
<submitter>Daniel Kr&uuml;gler</submitter>
<date>5 Mar 2007</date>

<discussion>
<p>
Both the class definition of regex_iterator (<sref
ref="[re.regiter]"/>/1) and the latter member specification (<sref
ref="[re.regiter.comp]"/>/1+2) declare both comparison operators as
non-const functions. Furtheron, both dereference operators are
unexpectedly also declared as non-const in <sref ref="[re.regiter]"/>/1
as well as in (<sref ref="[re.regiter.deref]"/>/1+2).
</p>
</discussion>

<resolution>
<p>
1) In (<sref ref="[re.regiter]"/>/1) change the current declarations
</p>

<blockquote><pre>
bool operator==(const regex_iterator&amp;) <ins>const</ins>;
bool operator!=(const regex_iterator&amp;) <ins>const</ins>;
const value_type&amp; operator*() <ins>const</ins>;
const value_type* operator-&gt;() <ins>const</ins>;
</pre></blockquote>

<p>
2) In <sref ref="[re.regiter.deref]"/> change the following declarations
</p>

<blockquote><pre>
const value_type&amp; operator*() <ins>const</ins>;
const value_type* operator-&gt;() <ins>const</ins>;
</pre></blockquote>

<p>
3) In <sref ref="[re.regiter.comp]"/> change the following declarations
</p>

<blockquote><pre>
bool operator==(const regex_iterator&amp; right) <ins>const</ins>;
bool operator!=(const regex_iterator&amp; right) <ins>const</ins>;
</pre></blockquote>
</resolution>

<note>
Kona (2007): The LWG adopted the proposed resolution of N2409 for this issue (which
is to adopt the proposed wording in this issue).
The LWG voted to accelerate this issue to Ready status to be voted into the WP at Kona.
</note>

</issue>
