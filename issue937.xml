<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="937" status="NAD Editorial">
<title>Atomics for standard typedef types</title>
<section><sref ref="[atomics]"/></section>
<submitter>Clark Nelson</submitter>
<date>5 Dec 2008</date>

<discussion>

<p><b>Addresses US 89</b></p>

<blockquote>
<p>
The types in the table "Atomics for standard typedef types" should be
typedefs, not classes. These semantics are necessary for compatibility
with C.
</p>

<p>
Change the classes to typedefs.
</p>
</blockquote>

<p>
<a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2427.html">N2427</a>
specified different requirements for atomic analogs of fundamental
integer types (such as <tt>atomic_int</tt>) and for atomic analogs of <tt>&lt;cstdint&gt;</tt>
typedefs (such as <tt>atomic_size_t</tt>). Specifically, <tt>atomic_int</tt> et al. were
specified to be distinct classes, whereas <tt>atomic_size_t</tt> et al. were
specified to be typedefs. Unfortunately, in applying
<a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2427.html">N2427</a>
to the WD, that distinction was erased, and the atomic analog of every <tt>&lt;cstdint&gt;</tt>
typedef is required to be a distinct class.
</p>

<p>
It shouldn't be required that the atomic analog of every <tt>&lt;cstdint&gt;</tt>
typedef be a typedef for some fundamental integer type. After all,
<tt>&lt;cstdint&gt;</tt> is supposed to provide standard names for extended integer
types. So there was a problem in
<a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2427.html">N2427</a>,
which certainly could have been
interpreted to require that. But the status quo in the WD is even worse,
because it's unambiguously wrong.
</p>

<p>
What is needed are words to require the existence of a bunch of type
names, without specifying whether they are class names or typedef names.
</p>

<note>
Summit:
</note>

<blockquote>
<p>
Change status to NAD, editorial. See US 89 comment notes above.
</p>
<p>
Direct the editor to turn the types into typedefs as proposed in the
comment. Paper approved by committee used typedefs, this appears to have
been introduced as an editorial change. Rationale: for compatibility
with C.
</p>
</blockquote>
</discussion>

<resolution>
<p>
</p>
</resolution>

</issue>
