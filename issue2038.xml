<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="2038" status="New">
<title>Missing definition for <tt>incrementable</tt> iterator</title>
<section><sref ref="[output.iterators]"/></section>
<submitter>Pete Becker</submitter>
<date>27 Feb 2011</date>

<discussion>

<p>In comp.lang.c++, Vicente Botet raises the following questions:</p>

<blockquote><p>
&quot;In "24.2.4 Output iterators" there are 3 uses of incrementable. I've
not found the definition. Could some one point me where it is defined?
<p/>
Something similar occurs with dereferenceable. While the definition is
given in "24.2.1 In general" it is used several times before.
<p/>
Shouldn't these definitions be moved to some previous section?&quot;
</p></blockquote>

<p>He's right: both terms are used without being properly defined.
<p/>
There is no definition of "incrementable".
<p/>
While there is a definition of "dereferenceable", it is, in fact, a definition of 
"dereferenceable iterator". "dereferenceable" is used throughout Clause 23 (Containers) 
before its definition in Clause 24. In almost all cases it's referring to iterators, 
but in <sref ref="[swappable.requirements]"/> there is a mention of "dereferenceable object"; in 
<sref ref="[allocator.requirements]"/> the table of Descriptive variable definitions refers to a 
"dereferenceable pointer"; <sref ref="[pointer.traits.functions]"/> refers to a 
"dereferenceable pointer"; in <sref ref="[locale.time.get.virtuals]"/>&frasl;11 (<tt>do_get</tt>) 
there is a requirement that a pointer "shall be dereferenceable". In those specific cases 
it is not defined.
</p>

<note>2011-03-02: Daniel comments:</note>

<p>I believe that the currently proposed resolution of issue <iref ref="2035"/> solves this
issue as well.</p>
</discussion>

<resolution>
<p></p>
</resolution>

</issue>
