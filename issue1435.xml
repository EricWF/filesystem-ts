<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [
  <!ENTITY nbsp "&#160;">
] >

<issue num="1435" status="C++11">
<title>Unclear returns specifications for C99 complex number functions</title>
<section><sref ref="[complex.value.ops]"/></section>
<submitter>BSI</submitter>
<date>25 Aug 2010</date>

<discussion>
<p><b>Addresses GB-120</b></p>

<p>
The complex number functions added for compatibility
with the C99 standard library are defined purely as a
cross-reference, with no hint of what they should return.
This is distinct from the style of documentation for the
functions in the earlier standard. In the case of the
inverse-trigonometric and hyperbolic functions, a
reasonable guess of the functionality may be made from
the name, this is not true of the cproj function, which
apparently returns the projection on the Reimann Sphere.
A single line description of each function, associated with
the cross-reference, will greatly improve clarity.
</p>

<note>2010-11-06 Beman provides proposed resolution wording.</note>

<note>
2010 Batavia: The working group concurred with the issue's Proposed Resolution
</note>

<note>
Adopted at 2010-11 Batavia
</note>

</discussion>

<resolution>

<p><i>Change 26.4.7 complex value operations [complex.value.ops] as indicated:</i></p>
<blockquote>
  <p><tt>template&lt;class T&gt; complex&lt;T&gt; proj(const complex&lt;T&gt;&amp; x);</tt></p>
  <blockquote>
    <p><ins><i>Returns:</i> the projection of <tt>x</tt> onto the Riemann 
    sphere.</ins></p>
    <p><del><i>Effects:</i></del> <ins><i>Remarks:</i></ins> Behaves the same as the C function <tt>cproj</tt>, 
    defined in 7.3.9.4.</p>
  </blockquote>
</blockquote>

<p><i>Change 26.4.8 complex transcendentals [complex.transcendentals] as indicated:</i></p>
<blockquote>
  <p><tt>template&lt;class T&gt; complex&lt;T&gt; acos(const complex&lt;T&gt;&amp; x);</tt></p>
  <blockquote>
    <p><ins><i>Returns:</i>&nbsp; the complex arc cosine  of <tt>x</tt>.</ins></p>
    <p><del><i>Effects:</i></del> <ins><i>Remarks:</i></ins> Behaves the same as the C function <tt>cacos</tt>, 
    defined in 7.3.5.1.</p>
  </blockquote>
</blockquote>

<p><i>Change 26.4.8 complex transcendentals [complex.transcendentals] as indicated:</i></p>
<blockquote>
  <p><tt>template&lt;class T&gt; complex&lt;T&gt; asin(const complex&lt;T&gt;&amp; x);</tt></p>
  <blockquote>
    <p><ins><i>Returns:</i>&nbsp; the complex arc sine  of <tt>x</tt>.</ins></p>
    <p><del><i>Effects:</i></del> <ins><i>Remarks:</i></ins> Behaves the same as the C function <tt>casin</tt>, 
    defined in 7.3.5.2.</p>
  </blockquote>
</blockquote>

<p><i>Change 26.4.8 complex transcendentals [complex.transcendentals] as indicated:</i></p>
<blockquote>
  <p><tt>template&lt;class T&gt; complex&lt;T&gt; atan(const complex&lt;T&gt;&amp; x);</tt></p>
  <blockquote>
    <p><ins><i>Returns:</i>&nbsp; the complex arc tangent  of <tt>x</tt>.</ins></p>
    <p><del><i>Effects:</i></del> <ins><i>Remarks:</i></ins> Behaves the same as the C function <tt>catan</tt>, 
    defined in 7.3.5.3.</p>
  </blockquote>
</blockquote>

<p><i>Change 26.4.8 complex transcendentals [complex.transcendentals] as indicated:</i></p>
<blockquote>
  <p><tt>template&lt;class T&gt; complex&lt;T&gt; acosh(const complex&lt;T&gt;&amp; x);</tt></p>
  <blockquote>
    <p><ins><i>Returns:</i>&nbsp; the complex arc hyperbolic cosine of
    <tt>x</tt>.</ins></p>
    <p><del><i>Effects:</i></del> <ins><i>Remarks:</i></ins> Behaves the same as the C function <tt>cacosh</tt>, 
    defined in 7.3.6.1.</p>
  </blockquote>
</blockquote>

<p><i>Change 26.4.8 complex transcendentals [complex.transcendentals] as indicated:</i></p>
<blockquote>
  <p><tt>template&lt;class T&gt; complex&lt;T&gt; asinh(const complex&lt;T&gt;&amp; x);</tt></p>
  <blockquote>
    <p><ins><i>Returns:</i>&nbsp; the complex arc hyperbolic sine  of <tt>
    x</tt>.</ins></p>
    <p><del><i>Effects:</i></del> <ins><i>Remarks:</i></ins> Behaves the same as the C function <tt>casinh</tt>, 
    defined in 7.3.6.2.</p>
  </blockquote>
</blockquote>

<p><i>Change 26.4.8 complex transcendentals [complex.transcendentals] as indicated:</i></p>
<blockquote>
  <p><tt>template&lt;class T&gt; complex&lt;T&gt; atanh(const complex&lt;T&gt;&amp; x);</tt></p>
  <blockquote>
    <p><ins><i>Returns:</i>&nbsp; the complex arc hyperbolic tangent  of
    <tt>x</tt>.</ins></p>
    <p><del><i>Effects:</i></del> <ins><i>Remarks:</i></ins> Behaves the same as the C function <tt>catanh</tt>, 
    defined in 7.3.6.2.</p>
  </blockquote>
</blockquote>


</resolution>

</issue>
