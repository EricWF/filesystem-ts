<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="881" status="WP">
<title>shared_ptr conversion issue</title>
<section><sref ref="[util.smartptr.shared.const]"/></section>
<submitter>Peter Dimov</submitter>
<date>30 Aug 2008</date>

<discussion>
<p>
We've changed <tt>shared_ptr&lt;Y&gt;</tt> to not convert to <tt>shared_ptr&lt;T&gt;</tt> when <tt>Y*</tt>
doesn't convert to <tt>T*</tt> by resolving issue <iref ref="687"/>. This only fixed the
converting copy constructor though.
<a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2351.htm">N2351</a>
later added move support, and
the converting move constructor is not constrained.
</p>

<note>
San Francisco:
</note>

<blockquote>
We might be able to move this to NAD, Editorial once shared_ptr is
conceptualized, but we want to revisit this issue to make sure.
</blockquote>

<note>
2009-07 Frankfurt
</note>

<blockquote>
<p>
Moved to Ready.
</p>
<p>
This issue now represents the favored format for specifying constrained templates.
</p>
</blockquote>

</discussion>

<resolution>
<p>
We need to change the Requires clause of the move constructor:
</p>

<blockquote><pre>
shared_ptr(shared_ptr&amp;&amp; r); 
template&lt;class Y&gt; shared_ptr(shared_ptr&lt;Y&gt;&amp;&amp; r); 
</pre>
<blockquote>
<i><del>Requires</del> <ins>Remarks</ins>:</i> <del>For the second constructor <tt>Y*</tt> shall be
convertible to <tt>T*</tt>.</del>
<ins>
The second constructor shall not participate in overload resolution
unless <tt>Y*</tt> is convertible to <tt>T*</tt>.
</ins>
</blockquote>
</blockquote>

<p>
in order to actually make the example in <iref ref="687"/> compile
(it now resolves to the move constructor).
</p>

</resolution>

</issue>
