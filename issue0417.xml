<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
    <!DOCTYPE issue SYSTEM "lwg_issue.dtd" [
        <!ENTITY nbsp " ">
     ]
>
<issue num="417" status="NAD">
    <title>what does ctype::do_widen() return on failure</title>
    <section><sref ref="[locale.ctype.virtuals]"/></section>
    <submitter>Martin Sebor</submitter>
    <date>18 Sep 2003</date>

    <discussion>
<p>
The Effects and Returns clauses of the do_widen() member function of
the ctype facet fail to specify the behavior of the function on failure.
That the function may not be able to simply cast the narrow character
argument to the type of the result since doing so may yield the wrong value
for some wchar_t encodings. Popular implementations of ctype&lt;wchar_t> that
use mbtowc() and UTF-8 as the native encoding (e.g., GNU glibc) will fail
when the argument's MSB is set. There is no way for the the rest of locale
and iostream to reliably detect this failure. 
</p>
<note>Kona: This is a real problem.  Widening can fail.  It's unclear
  what the solution should be.  Returning WEOF works for the wchar_t
  specialization, but not in general.  One option might be to add a
  default, like <i>narrow</i>.  But that's an incompatible change.
  Using <i>traits::eof</i> might seem like a good idea, but facets
  don't have access to traits (a recurring problem).  We could
  have <i>widen</i> throw an exception, but that's a scary option;
  existing library components aren't written with the assumption
  that <i>widen</i> can throw.</note>

<note>
2009-07 Frankfurt
</note>

<blockquote>
NAD. The behavior is specified for all of the facets that an
implementation is required to provide, for the basic character set.
</blockquote>

</discussion>

<resolution>
</resolution>
</issue>
