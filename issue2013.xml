<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="2013" status="Review">
<title>Do library implementers have the freedom to add <tt>constexpr</tt>?</title>
<section><sref ref="[constexpr.functions]"/></section>
<submitter>Matt Austern</submitter>
<date>12 Nov 2010</date>

<discussion>
<p>Suppose that a particular function is not tagged as constexpr in the standard,
but that, in some particular implementation, it is possible to write it within
the constexpr constraints. If an implementer tags such a function as constexpr,
is that a violation of the standard or is it a conforming extension?</p>

<p>There are two questions to consider. First, is this allowed under the
as-if rule? Second, if it does not fall under as-if, is there
(and should there be) any special license granted to implementers
to do this anyway, sort of the way we allow elision of copy constructors
even though it is detectable by users?</p>

<p>I believe that this does not fall under "as-if", so implementers
probably don't have that freedom today. I suggest changing the WP
to grant it. Even if we decide otherwise, however, I suggest that
we make it explicit.</p>

<note>
2011 Bloomington
</note>

<p>
General surprise this was not already in 'Ready' status, and so moved.
</p>

<note>
2012 Kona
</note>

<p>
Some concern expressed when presented to full committee for the vote to WP status
that this issue had been resolved without sufficient thought of the consequences
for diverging library implementations, as users may use SFINAE to observe
different behavior from otherwise identical code.  Issue moved back to Review
status, and will be discussed again in Portland with a larger group.

Note for Portland: John Spicer has agreed to represent Core's concerns during
any such discussion within LWG.
</p>

<note>2013-09 Chicago</note>

<p>
Straw poll: LWG strongly favoured to remove from implementations the freedom to add <tt>constexpr</tt>.
<p/>
Matt provides new wording.
</p>

</discussion>

<resolution>
<p><i>In <sref ref="[constexpr.functions]"/>, change paragraph 1 to:</i></p>

<blockquote><p>
<ins>This standard explicitly requires that certain standard library functions
are <tt>constexpr</tt> [dcl.constexpr]. 
An implementation shall not declare any standard library signature as <tt>constexpr</tt> 
except for those where it is explicitly required.</ins>
Within any header that provides any non-defining declarations of <tt>constexpr</tt>
functions or constructors an implementation shall provide corresponding definitions. 
</p></blockquote>

</resolution>

</issue>
