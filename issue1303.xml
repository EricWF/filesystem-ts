<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="1303" status="WP">
<title><tt>shared_ptr</tt>, <tt>unique_ptr</tt>, and rvalue references v2</title>
<section><sref ref="[unique.ptr.single]"/>, <sref ref="[util.smartptr.shared]"/></section>
<submitter>Stephan T. Lavavej</submitter>
<date>23 Jan 2010</date>

<discussion>
<p>
<a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2009/n3000.pdf">N3000</a>
<sref ref="[util.smartptr.shared]"/>/1 still says:
</p>

<blockquote><pre>
template &lt;class Y, class D&gt; explicit shared_ptr(const unique_ptr&lt;Y, D&gt;&amp; r) = delete;
template &lt;class Y, class D&gt; shared_ptr&amp; operator=(const unique_ptr&lt;Y, D&gt;&amp; r) = delete;
</pre></blockquote>

<p>
I believe that this is unnecessary now that "rvalue references v2"
prevents rvalue references from binding to lvalues, and I didn't
see a Library Issue tracking this.
</p>

<note>
2010-02-12 Moved to Tentatively Ready after 5 positive votes on c++std-lib.
</note>

</discussion>

<resolution>

<p>
Strike from <sref ref="[unique.ptr.single]"/>:
</p>

<blockquote><pre>
template &lt;class T, class D = default_delete&lt;T&gt;&gt; class unique_ptr {
  ...
  unique_ptr(const unique_ptr&amp;) = delete;
  <del>template &lt;class U, class E&gt; unique_ptr(const unique_ptr&lt;U, E&gt;&amp;) = delete;</del>
  unique_ptr&amp; operator=(const unique_ptr&amp;) = delete;
  <del>template &lt;class U, class E&gt; unique_ptr&amp; operator=(const unique_ptr&lt;U, E&gt;&amp;) = delete;</del>
};
</pre></blockquote>

<p>
Strike from <sref ref="[util.smartptr.shared]"/>:
</p>

<blockquote><pre>
template&lt;class T&gt; class shared_ptr {
  ...
  <del>template &lt;class Y, class D&gt; explicit shared_ptr(const unique_ptr&lt;Y, D&gt;&amp; r) = delete;</del>
  ...
  <del>template &lt;class Y, class D&gt; shared_ptr&amp; operator=(const unique_ptr&lt;Y, D&gt;&amp; r) = delete;</del>
  ...
};
</pre></blockquote>

</resolution>

</issue>
