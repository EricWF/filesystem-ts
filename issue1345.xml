<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [
  <!ENTITY nbsp "&#160;">
] >

<issue num="1345" status="Open">
<title>[FCD] Library classes should have <tt>noexcept</tt> move operations</title>
<section><sref ref="[library]"/></section>
<submitter>BSI</submitter>
<date>25 Aug 2010</date>

<discussion>
<p><b>Addresses GB-61</b></p>
<p>
All library types should have non-throwing move
constructors and move-assignment operators unless
wrapping a type with a potentially throwing move operation.
When such a type is a class-template, these
operations should have a conditional <tt>noexcept</tt>
specification.
</p>
<p>
There are many other places where a <tt>noexcept</tt>
specification may be considered, but the move operations
are a special case that must be called out, to effectively
support the <tt>move_if_noexcept</tt> function template.
</p>

<note>
Resolution proposed by ballot comment:
</note>
<p>
Review every class and class template in the library. If <tt>noexcept</tt> 
move constructor/assignment operators can be implicitly declared, then they
should be implicitly declared, or explicitly defaulted. Otherwise, a move 
constructor/move assignment operator with a <tt>noexcept</tt> exception
specification should be provided.
</p>

<note>
2010-10-31 Daniel comments:
</note>

<blockquote><p>
The proposed resolution of <a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2010/n3157.html">n3157</a>
would satisfy this request.
</p></blockquote>
</discussion>

<resolution>
<p>
See <a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2010/n3157.html">n3157</a>
</p>
</resolution>

</issue>
