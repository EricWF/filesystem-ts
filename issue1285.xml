<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="1285" status="C++11">
<title><tt>allocator_traits</tt> call to <tt>new</tt></title>
<section><sref ref="[allocator.traits.members]"/></section>
<submitter>Howard Hinnant</submitter>
<date>10 Dec 2009</date>

<discussion>
<p>
LWG issue <iref ref="402"/> added "<tt>::</tt>" to the call to <tt>new</tt>
within <tt>allocator::construct</tt>.  I suspect we want to retain that fix.
</p>

<note>
2009-12-13 Moved to Tentatively Ready after 7 positive votes on c++std-lib.
</note>
</discussion>

<resolution>
<p>
Change <sref ref="[allocator.requirements]"/>, table 40 "Allocator requirements":
</p>

<blockquote>
<table border="1">
<caption>Table 40 &mdash; Allocator requirements</caption>
<tr>
<th>Expression</th>
<th>Return type</th>
<th>Assertion/note<br/>pre-/post-condition</th>
<th>Default</th>
</tr>
<tr>
<td>
<tt>a.construct(c,args)</tt>
</td>
<td>
(not used)
</td>
<td>
Effect: Constructs an object of type <tt>C</tt> at <tt>c</tt>
</td>
<td>
<tt><ins>::</ins>new ((void*)c) C(forward&lt;Args&gt;(args)...)</tt>
</td>
</tr>
</table>
</blockquote>

<p>
Change <sref ref="[allocator.traits.members]"/>, p4:
</p>

<blockquote><pre>
template &lt;class T, class... Args&gt;
  static void construct(Alloc&amp; a, T* p, Args&amp;&amp;... args);
</pre>
<blockquote><p>
4 <i>Effects:</i> calls <tt>a.construct(p,
std::forward&lt;Args&gt;(args)...)</tt> if that call is well-formed; otherwise,
invokes <tt><ins>::</ins>new (static_cast&lt;void*&gt;(p))
T(std::forward&lt;Args&gt;(args)...)</tt>.
</p></blockquote>
</blockquote>
</resolution>

</issue>
