<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="2319" status="New">
<title><tt>basic_string</tt>'s move constructor should not be <tt>noexcept</tt></title>
<section><sref ref="[string.cons]"/></section>
<submitter>Stephan T. Lavavej</submitter>
<date>21 Sep 2013</date>

<discussion>
<p>
In debugging implementations, containers (including <tt>basic_string</tt>) may need to own dynamically allocated helper objects at 
all times, including in their default-constructed and moved-from states. This means that their default constructors and move 
constructors may throw exceptions. Therefore, the Standard should not mark them as <tt>noexcept</tt>. (Other implementations will 
still be permitted to add <tt>noexcept</tt>.)
</p>
</discussion>

<resolution>
<p>This wording is relative to N3691.</p>

<ol>
<li><p>In <sref ref="[basic.string]"/>/5, class template <tt>basic_string</tt> synopsis, and <sref ref="[string.cons]"/>/2 
change as indicated:</p>

<blockquote><pre>
basic_string(basic_string&amp;&amp; str) <del>noexcept</del>;
</pre></blockquote>
</li>

<li><p>Edit <sref ref="[string.cons]"/>/17 as indicated:</p>

<blockquote><pre>
basic_string(const basic_string&amp; str, const Allocator&amp; alloc);
basic_string(basic_string&amp;&amp; str, const Allocator&amp; alloc);
</pre>
<blockquote>
<p>
[&hellip;]
<p/>
<del>-17- <i>Throws:</i> The second form throws nothing if <tt>alloc == str.get_allocator()</tt>.</del>.
</p>
</blockquote>
</blockquote>
</li>

</ol>

</resolution>

</issue>
