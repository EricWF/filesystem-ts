<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="1339" status="WP">
<title><tt>uninitialized_fill_n</tt> should return the end of its range</title>
<section><sref ref="[uninitialized.fill.n]"/></section>
<submitter>Jared Hoberock</submitter>
<date>14 Jul 2010</date>

<discussion>
<p>
<a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2010/n3092.pdf">N3092's</a>
specification of <tt>uninitialized_fill_n</tt> discards useful information and
is inconsistent with other algorithms such as <tt>fill_n</tt> which accept an
iterator and a size.  As currently specified, <tt>unintialized_fill_n</tt>
requires an additional linear traversal to find the end of the range.
</p>

<p>
Instead of returning <tt>void</tt>, <tt>unintialized_fill_n</tt> should return
one past the last iterator it dereferenced.
</p>

<note>
Post-Rapperswil:
</note>

<blockquote><p>
Moved to Tentatively Ready after 5 positive votes on c++std-lib.
</p></blockquote>

<note>
Adopted at 2010-11 Batavia
</note>

</discussion>

<resolution>
<p>
In section <sref ref="[memory]"/> change:,
</p>

<blockquote><pre>
template &lt;class ForwardIterator, class Size, class T&gt;
  <del>void</del> <ins>ForwardIterator</ins> uninitialized_fill_n(ForwardIterator first, Size n, const T&amp; x);
</pre></blockquote>


<p>
In section <sref ref="[uninitialized.fill.n]"/> change,
</p>

<blockquote><pre>
template &lt;class ForwardIterator, class Size, class T&gt;
  <del>void</del> <ins>ForwardIterator</ins> uninitialized_fill_n(ForwardIterator first, Size n, const T&amp; x);
</pre>
<blockquote>
<p>
1 <i>Effects:</i>
</p>
<blockquote><pre>
for (; n--; ++first)
  ::new (static_cast&lt;void*&gt;(&amp;*first))
    typename iterator_traits&lt;ForwardIterator&gt;::value_type(x);
<ins>return first;</ins>
</pre></blockquote>
</blockquote>
</blockquote>

</resolution>

</issue>
