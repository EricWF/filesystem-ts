<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="71" status="New">
<title>Errors in Copy</title>
<section><sref ref="15.3 [fs.op.copy]"/></section>
<submitter>Jonathan Wakely</submitter>
<date>28 Jul 2014</date>

<discussion>
  <p>15.3 [fs.op.copy] paragraph 16 says:</p>
  <blockquote>
    <p>
      Otherwise if <code>!exists(t) &amp; (options &amp;
        copy_options::copy_symlinks) != 
        copy_options::none</code>, then <code>copy_symlink(from, to, options)</code>.
    </p>
  </blockquote>
  <p>But there is no overload of <code>copy_symlink</code> that takes a <code>copy_options</code>;
  it should be <code>copy_symlink(from, to)</code>.</p>

  <p>15.3 [fs.op.copy] Paragraph 26 says:</p>
  <blockquote>
    <p>as if by <code>for (directory_entry& x : directory_iterator(from))</code></p>
  </blockquote>
  <p>but the result of dereferencing a <code>directory_iterator</code> is const; it should be:</p>
  <blockquote>
    <p>as if by <code>for (<ins>const </ins>directory_entry& x : directory_iterator(from))</code></p>
  </blockquote>
</discussion>

<resolution>
  <p>Change 15.3 [fs.op.copy] paragraph 16 as indicated:</p>
  <blockquote>
    <p>
      Otherwise if <code>
        !exists(t) &amp; (options &amp;
        copy_options::copy_symlinks) !=
        copy_options::none
      </code>, then <code>copy_symlink(from, to<del>, options</del>)</code>.
    </p>
  </blockquote>
  <p>Change 15.3 [fs.op.copy] paragraph 26 as indicated:</p>
  <blockquote>
    <p>
      as if by <code>
        for (<ins>const </ins>directory_entry& x : directory_iterator(from))
      </code>
    </p>
  </blockquote>
</resolution>

</issue>
