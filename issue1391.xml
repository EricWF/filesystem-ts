<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [
  <!ENTITY nbsp "&#160;">
] >

<issue num="1391" status="Open">
<title>[FCD] Ballot Comment DE-18</title>
<section><sref ref="[meta]"/></section>
<submitter>DIN</submitter>
<date>25 Aug 2010</date>

<discussion>
<p><b>Addresses DE-18</b></p>
<p>
Several type traits require compiler support, e.g.
std::is_constructible or std::is_convertible. Their current
specification seems to imply, that the corresponding test
expressions should be well-formed, even in absense of
access:
</p>
<PRE>
class X { X(int){} };
constexpr bool test = std::is_constructible&lt;X, int&gt;::value;
</PRE>
The specification does not clarify the context of this test
and because it already goes beyond normal language
rules, it's hard to argue by means of normal language
rules what the context and outcome of the test should be.

<note>
2010-10-24 Daniel adds:
</note>

<blockquote>
Accepting <a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2010/n3142.html">n3142</a> would solve this issue.
</blockquote>

</discussion>

<resolution>
Specify that std::is_constructible and
std::is_convertible will return true only for public
constructors/conversion functions.
</resolution>

</issue>
