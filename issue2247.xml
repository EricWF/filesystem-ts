<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="2247" status="Pending WP">
<title>Type traits and <tt>std::nullptr_t</tt></title>
<section><sref ref="[meta.unary.cat]"/></section>
<submitter>Joe Gottman</submitter>
<date>15 Mar 2013</date>

<discussion>

<p>
According to <sref ref="[meta.unary.cat]"/>, for every type <tt>T</tt>, exactly one of the primary type traits is true.  
So which is true for the type <tt>std::nullptr_t</tt>?  By <sref ref="[lex.nullptr]"/> <tt>std::nullptr_t</tt> is not a 
pointer type or a pointer-to-member type, so <tt>is_pointer</tt>, <tt>is_member_object_pointer</tt> and 
<tt>is_member_function_pointer</tt> can't be true for <tt>std::nullptr_t</tt>, and none of the other primary type traits 
seem to apply.
</p>

<note>2013-04-20, Bristol</note>
<p>Rename to <tt>is_null_pointer</tt>, move to Ready</p>

<p>Previous wording:</p>

<blockquote class="note">   
<p>This wording is relative to N3485.</p>

<ol>
<li>
<p>
Edit <sref ref="[meta.type.synop]"/>, header <tt>&lt;type_traits&gt;</tt> synopsis:
</p>
<blockquote><pre>
namespace std {
  [&hellip;]
  // 20.9.4.1, primary type categories:
  template &lt;class T&gt; struct is_void;
  <ins>template &lt;class T&gt; struct is_nullptr;</ins>
  template &lt;class T&gt; struct is_integral;
  template &lt;class T&gt; struct is_floating_point;
  [&hellip;]
}
</pre></blockquote>
</li>

<li>
<p>
Edit Table 47 &mdash; "Primary type category predicates" as indicated:
</p>

<blockquote>
<table border="1">
<caption>Table 47 &mdash; Primary type category predicates</caption>
<tr>
<th>Template</th>
<th>Condition</th>
<th>Comments</th>
</tr>

<tr>
<td colspan="3" align="center">
<tt>&hellip;</tt>
</td>
</tr>

<tr>
<td>
<ins><tt>template &lt;class T&gt;<br/>
struct is_nullptr;</tt></ins>
</td>
<td>
<ins><tt>T</tt> is <tt>std::nullptr_t</tt> ([basic.fundamental])</ins>
</td>
<td>
&nbsp;
</td>
</tr>

<tr>
<td colspan="3" align="center">
<tt>&hellip;</tt>
</td>
</tr>

</table>
</blockquote>

</li>

</ol>
</blockquote>

<note>2013-09-29, Chicago</note>

<p>Apply to the Working Paper</p>

</discussion>

<resolution>
<p>This wording is relative to N3485.</p>

<ol>
<li>
<p>
Edit <sref ref="[meta.type.synop]"/>, header <tt>&lt;type_traits&gt;</tt> synopsis:
</p>
<blockquote><pre>
namespace std {
  [&hellip;]
  // 20.9.4.1, primary type categories:
  template &lt;class T&gt; struct is_void;
  <ins>template &lt;class T&gt; struct is_null_pointer;</ins>
  template &lt;class T&gt; struct is_integral;
  template &lt;class T&gt; struct is_floating_point;
  [&hellip;]
}
</pre></blockquote>
</li>

<li>
<p>
Edit Table 47 &mdash; "Primary type category predicates" as indicated:
</p>

<blockquote>
<table border="1">
<caption>Table 47 &mdash; Primary type category predicates</caption>
<tr>
<th>Template</th>
<th>Condition</th>
<th>Comments</th>
</tr>

<tr>
<td colspan="3" align="center">
<tt>&hellip;</tt>
</td>
</tr>

<tr>
<td>
<ins><tt>template &lt;class T&gt;<br/>
struct is_null_pointer;</tt></ins>
</td>
<td>
<ins><tt>T</tt> is <tt>std::nullptr_t</tt> ([basic.fundamental])</ins>
</td>
<td>
&nbsp;
</td>
</tr>

<tr>
<td colspan="3" align="center">
<tt>&hellip;</tt>
</td>
</tr>

</table>
</blockquote>

</li>

</ol>

</resolution>

</issue>
