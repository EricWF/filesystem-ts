<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [
  <!ENTITY nbsp "&#160;">
] >

<issue num="1361" status="Open">
<title>[FCD] Does use of <tt>std::size_t</tt> in a header imply that typedef name is available to users?</title>
<section><sref ref="[using]"/></section>
<submitter>BSI</submitter>
<date>25 Aug 2010</date>

<discussion>
<p><b>Addresses GB-58</b></p>
<p>
It is not clear whether a library header specified in terms
of a typedef name makes that same typedef name
available for use, or if it simply requires that the specified
type is an alias of the same type, and so the typedef name
cannot be used without including the specific header that
defines it. For example, is the following code required to
be accepted:
</p>
<blockquote><pre>
#include &lt;vector&gt;
std::size_t x = 0;
</pre></blockquote>
<p>
Most often, this question concerns the typedefs defined in
header <tt>&lt;cstddef&gt;</tt>
</p>

<note>
Resolution proposed by ballot comment:
</note>
<p>
Add a paragraph under <sref ref="[using]"/> clarifying whether
or not headers specified in terms of <tt>std::size_t</tt> can
be used to access the typedef <tt>size_t</tt>, or whether
the header <tt>&lt;cstddef&gt;</tt> must be included to reliably
use this name.
</p>
</discussion>

<resolution>
</resolution>

</issue>
