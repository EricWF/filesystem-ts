<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="698" status="CD1">
<title><tt>system_error</tt> needs <tt>const char*</tt> constructors</title>
<section><sref ref="[syserr.syserr.overview]"/></section>
<submitter>Daniel Kr&uuml;gler</submitter>
<date>24 Jun 2007</date>

<discussion>
<p>
In <sref ref="[syserr.syserr.overview]"/> we have the class definition of
<tt>std::system_error</tt>. In contrast to all exception classes, which
are constructible with a <tt>what_arg string</tt> (see <sref ref="[std.exceptions]"/>,
or <tt>ios_base::failure</tt> in <sref ref="[ios::failure]"/>), only overloads with with
<tt>const string&amp;</tt> are possible. For consistency with the re-designed
remaining exception classes this class should also provide
c'tors which accept a const <tt>char* what_arg</tt> string.
</p>
<p>
Please note that this proposed addition makes sense even
considering the given implementation hint for <tt>what()</tt>, because
<tt>what_arg</tt> is required to be set as <tt>what_arg</tt> of the base class
<tt>runtime_error</tt>, which now has the additional c'tor overload
accepting a <tt>const char*</tt>.
</p>
</discussion>

<resolution>
<p>
This proposed wording assumes issue <iref ref="832"/> has been accepted and applied to the working paper.
</p>

<p>
Change <sref ref="[syserr.syserr.overview]"/> Class system_error overview, as indicated:
</p>

<blockquote><pre>
public:
  system_error(error_code ec, const string&amp; what_arg);
  <ins>system_error(error_code ec, const char* what_arg);</ins>
  system_error(error_code ec);
  system_error(int ev, const error_category* ecat,
      const string&amp; what_arg);
  <ins>system_error(int ev, const error_category* ecat,
      const char* what_arg);</ins>
  system_error(int ev, const error_category* ecat);
</pre></blockquote>

<p>
To <sref ref="[syserr.syserr.members]"/> Class system_error members add:
</p>

<blockquote>
<pre>
system_error(error_code ec, const char* what_arg);
</pre>
<blockquote>
<p>
<i>Effects:</i> Constructs an object of class <tt>system_error</tt>.
</p>
<p>
<i>Postconditions:</i> <tt>code() == ec</tt> and <tt>strcmp(runtime_error::what(), what_arg) == 0</tt>.
</p>
</blockquote>

<pre>
system_error(int ev, const error_category* ecat, const char* what_arg);
</pre>

<blockquote>
<p>
<i>Effects:</i> Constructs an object of class <tt>system_error</tt>.
</p>
<p>
<i>Postconditions:</i> <tt>code() == error_code(ev, ecat)</tt> and <tt>strcmp(runtime_error::what(), what_arg) == 0</tt>.
</p>
</blockquote>
</blockquote>

</resolution>

</issue>
