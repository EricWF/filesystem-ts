<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="2139" status="New">
<title>What is a <em>used-defined</em> type?</title>
<section><sref ref="[namespace.std]"/>, <sref ref="[syserr]"/>, <sref ref="[allocator.uses.trait]"/>, 
<sref ref="[func.bind.isbind]"/>, <sref ref="[func.bind.isplace]"/>, <sref ref="[unord.hash]"/>,
<sref ref="[meta.trans.other]"/>, <sref ref="[locale]"/>, <sref ref="[locale.codecvt]"/>,
<sref ref="[re.regiter.incr]"/></section>
<submitter>Lo&iuml;c Joly</submitter>
<date>8 Mar 2012</date>

<discussion>

<p>
The expression "user-defined type" is used in several places in the standard, but I'm not sure what 
it means. More specifically, is a type defined in the standard library a user-defined type?
<p/>
From my understanding of English, it is not. From most of the uses of this term in the standard, it 
seem to be considered as user defined. In some places, I'm hesitant, e.g. <sref ref="[namespace.std]"/> p1:
</p>
<blockquote><p>
A program may add a template specialization for any standard library template to namespace <tt>std</tt> 
only if the declaration depends on a user-defined type and the specialization meets the standard library 
requirements for the original template and is not explicitly prohibited.
</p></blockquote>
<p>
Does it mean we are allowed to add in the namespace <tt>std</tt> a specialization for 
<tt>std::vector&lt;std::pair&lt;T, U&gt;&gt;</tt>, for instance?
<p/>
Additional remarks from the reflector discussion: The traditional meaning of user-defined types refers
to class types and enum types, but the library actually means here user-defined types that are not
(purely) library-provided. Presumably a new term - like <em>user-provided type</em> - should be introduced
and properly defined.
</p>

</discussion>

<resolution>
</resolution>

</issue>
