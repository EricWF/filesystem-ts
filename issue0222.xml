<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="222" status="TC1">
<title>Are throw clauses necessary if a throw is already implied by the effects clause?</title>
<section><sref ref="[structure.specifications]"/></section>
<submitter>Judy Ward</submitter>
<date>17 Mar 2000</date>

<discussion>
<p>Section 21.3.6.8 describes the basic_string::compare function this way:</p>
<blockquote>
  <pre>21.3.6.8 - basic_string::compare [lib.string::compare]

int compare(size_type pos1, size_type n1,
                const basic_string&lt;charT,traits,Allocator&gt;&amp;  str ,
                size_type  pos2 , size_type  n2 ) const;

-4- Returns: 

    basic_string&lt;charT,traits,Allocator&gt;(*this,pos1,n1).compare(
                 basic_string&lt;charT,traits,Allocator&gt;(str,pos2,n2)) .</pre>
</blockquote>
<p>and the constructor that's implicitly called by the above is
defined to throw an out-of-range exception if pos &gt; str.size(). See
section <sref ref="[string.require]"/> paragraph 4.</p>

<p>On the other hand, the compare function descriptions themselves don't have
&quot;Throws: &quot; clauses and according to 17.3.1.3, paragraph 3, elements
that do not apply to a function are omitted.</p>
<p>So it seems there is an inconsistency in the standard -- are the
&quot;Effects&quot; clauses correct, or are the &quot;Throws&quot; clauses
missing?</p>
</discussion>

<resolution>
<p>In <sref ref="[structure.specifications]"/> paragraph 3, the footnote 148 attached to
the sentence &quot;Descriptions of function semantics contain the
following elements (as appropriate):&quot;, insert the word
&quot;further&quot; so that the foot note reads:</p>
<blockquote>
  <p>To save space, items that do not apply to a function are
  omitted. For example, if a function does not specify any further
  preconditions, there will be no &quot;Requires&quot; paragraph.</p>
</blockquote>
</resolution>

<rationale>
<p>The standard is somewhat inconsistent, but a failure to note a
throw condition in a throws clause does not grant permission not to
throw.  The inconsistent wording is in a footnote, and thus
non-normative. The proposed resolution from the LWG clarifies the
footnote.</p>
</rationale>
</issue>
