<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="476" status="NAD">
<title>Forward Iterator implied mutability</title>
<section><sref ref="[forward.iterators]"/></section>
<submitter>Dave Abrahams</submitter>
<date>9 Jul 2004</date>

<discussion>

<p>24.1/3 says:</p>
<blockquote><p>
  Forward iterators satisfy all the requirements of the input and
  output iterators and can be used whenever either kind is specified
</p></blockquote>

<p>
The problem is that satisfying the requirements of output iterator
means that you can always assign *something* into the result of
dereferencing it.  That makes almost all non-mutable forward
iterators non-conforming.  I think we need to sever the refinement
relationship between forward iterator and output iterator.
</p>

<p>Related issue: <iref ref="200"/>.  But this is not a dup.</p>

</discussion>

<resolution>
</resolution>

<rationale>
<p>Yes, 24.1/3 does say that. But it's introductory material. The
precise specification is in 24.1.3, and the requrements table there is
right.  We don't need to fine-tune introductory wording.  (Especially
since this wording is likely to be changed as part of the iterator
overhaul.)</p> 
</rationale>

</issue>
