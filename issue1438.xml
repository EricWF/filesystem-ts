<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [
  <!ENTITY nbsp "&#160;">
] >

<issue num="1438" status="Immediate">
<title>[FCD] No definition for <tt>base()</tt></title>
<section><sref ref="[rand.adapt.disc]"/></section>
<submitter>INCITS</submitter>
<date>25 Aug 2010</date>

<discussion>
<p><b>Addresses US-126</b></p>

Each adaptor has a member function called <tt>base()</tt> which has no definition.

<note>
Resolution proposed by ballot comment:
</note>
<blockquote>
Give it the obvious definition.
</blockquote>

<note>
2010-11-03 Daniel comments and provides a proposed resolution:
</note>

<p>The following proposal adds <tt>noexcept</tt> specifiers to the declarations of
the <tt>base()</tt> functions as replacement for a &quot;<i>Throws</i>: Nothing&quot; element.
</p>

<note>
2010 Batavia: The working group reviewed this issue, and recommended to add the following to the Proposed Resolution.
<ul><li>
Append to paragraph 1 of [rand.req.adapt] (or at the Editor's discretion insert as a new paragraph following that paragraph): 
The expression <tt>a.base()</tt> shall be valid and shall return a const reference to <tt>a</tt>'s base engine. 
</li>
</ul>
After further review, the working group concurred with the Proposed Resolution.
</note>

</discussion>

<resolution>
<ol>
<li>Change in [rand.adapt.disc]/3, class template <tt>discard_block_engine</tt> synopsis, the following declaration:
<blockquote><pre>
// <em>property functions</em>
const Engine&amp; base() const <ins>noexcept</ins>;
</pre></blockquote>
</li>
<li>Add the following new prototype description at the end of sub-clause [rand.adapt.disc]:
<blockquote>
<pre><ins>const Engine&amp; base() const noexcept;</ins>
</pre>
<blockquote>
<ins>? <i>Returns</i>: <tt>e</tt>.</ins>
</blockquote>
</blockquote>
</li>
<li>Change in [rand.adapt.ibits]/4, class template <tt>independent_bits_engine</tt> synopsis, the following declaration:
<blockquote><pre>
// <em>property functions</em>
const Engine&amp; base() const <ins>noexcept</ins>;
</pre></blockquote>
</li>
<li>Add the following new prototype description at the end of sub-clause [rand.adapt.ibits]:
<blockquote>
<pre><ins>const Engine&amp; base() const noexcept;</ins>
</pre>
<blockquote>
<ins>? <i>Returns</i>: <tt>e</tt>.</ins>
</blockquote>
</blockquote>
</li>
<li>Change in [rand.adapt.shuf]/3, class template <tt>shuffle_order_engine</tt> synopsis, the following declaration:
<blockquote><pre>
// <em>property functions</em>
const Engine&amp; base() const <ins>noexcept</ins>;
</pre></blockquote>
</li>
<li>Add the following new prototype description at the end of sub-clause [rand.adapt.shuf]:
<blockquote>
<pre><ins>const Engine&amp; base() const noexcept;</ins>
</pre>
<blockquote>
<ins>? <i>Returns</i>: <tt>e</tt>.</ins>
</blockquote>
</blockquote>
</li>
</ol>
</resolution>

</issue>
