<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="1163" status="NAD Editorial">
<title><tt>shared_future</tt> is inconsistent with <tt>shared_ptr</tt></title>
<section><sref ref="[futures.shared_future]"/></section>
<submitter>LWG</submitter>
<date>28 Jun 2009</date>

<discussion>

<p><b>Addresses UK 338</b></p>

<p><b>Description</b></p>

        <p><tt>shared_future</tt> is currently
        CopyConstructible, but not CopyAssignable. This is
        inconsistent with <tt>shared_ptr</tt>, and will surprise users.
        Users will then write work-arounds to provide this
        behaviour. We should provide it simply and efficiently as
        part of shared_future. Note that since the shared_future
        member functions for accessing the state are all declared
        const, the original usage of an immutable shared_future
        value that can be freely copied by multiple threads can be
        retained by declaring such an instance as "<tt>const
        shared_future</tt>".</p>
<p><b>Suggestion</b></p>
        <p>Remove "=delete"
        from the copy-assignment operator of shared_future. Add a
        move-constructor <tt>shared_future(shared_future&amp;&amp;
        rhs)</tt>, and a move-assignment operator <tt>shared_future&amp;
        operator=(shared_future&amp;&amp; rhs)</tt>. The postcondition
        for the copy-assignment operator is that <tt>*this</tt> has the same
        associated state as <tt>rhs</tt>. The postcondition for the
        move-constructor and move assignment is that <tt>*this</tt> has the
        same associated as <tt>rhs</tt> had before the
        constructor/assignment call and that <tt>rhs</tt> has no associated
        state.</p>
<p><b>Notes</b></p>
<p>Create an issue. Detlef will look into it.</p>

<note>
2009-07 Frankfurt
</note>

<blockquote>
Pending a paper from Anthony Williams / Detleff Volleman.
</blockquote>

<note>
2009-10-14 Pending paper:
<a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2009/n2967.html">N2967</a>.
</note>

<note>
2009-10 Santa Cruz:
</note>

<blockquote>
NAD Editorial.  Solved by
<a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2009/n2997.htm">N2997</a>.
</blockquote>

</discussion>

<resolution>
</resolution>

</issue>
