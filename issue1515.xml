<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [
  <!ENTITY nbsp "&#160;">
] >

<issue num="1515" status="Resolved">
<title>[FCD] <tt>packaged_task::make_ready_at_thread_exit</tt> has no
synchronization requirements</title>
<section><sref ref="[futures.task.members]"/></section>
<submitter>INCITS</submitter>
<date>25 Aug 2010</date>

<discussion>
<p><b>Addresses US-208</b></p>

<p>
<tt>packaged_task::make_ready_at_thread_exit</tt> has no
synchronization requirements.
</p>

<note>
Resolution proposed by ballot comment:
</note>
<p>
Figure out what the synchronization requirements
should be and write them.
</p>

<note>2011-02-09 Anthony provides a proposed resolution</note>

<note>2011-02-19 Additional edits by Hans, shown in the proposed resolution section</note>

<note>2011-02-22 Reflector discussion</note>
<p>
Moved to Tentatively Ready after 5 votes.
</p> 

<note>
<p>Proposed Resolution</p>

<p>Add a new paragraph following <sref ref="[futures.task.members]"/> p. 19:</p>

<blockquote><pre>
void make_ready_at_thread_exit(ArgTypes... args);
</pre></blockquote>
<blockquote>
<p>
19 - ...
</p>
<p>
<ins>?? - <i>Synchronization</i>: Following a successful call to <tt>make_ready_at_thread_exit</tt>, the
destruction of all objects with thread storage duration associated with
the current thread happens before the associated asynchronous state is
made ready. The marking of the associated asynchronous state as ready
synchronizes with (<sref ref="[intro.multithread]"/>) the successful return from any function that
detects that the state is set to ready.</ins>
</p>
</blockquote>
</note>
</discussion>

<resolution>
Resolved 2011-03 Madrid meeting by paper <a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2011/n3278">N3278</a>
</resolution>

</issue>
