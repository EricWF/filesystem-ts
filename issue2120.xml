<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="2120" status="New">
<title>What should <tt>async</tt> do if neither '<tt>async</tt>' nor '<tt>deferred</tt>' is set in policy?</title>
<section><sref ref="[futures.async]"/></section>
<submitter>Jonathan Wakely</submitter>
<date>1 Jan 2012</date>

<discussion>

<p>
Implementations already disagree, one returns an invalid future with
no shared state, one chooses <tt>policy == async</tt> and one chooses <tt>policy ==
deferred</tt>, see c++std-lib-30839, c++std-lib-30840 and c++std-lib-30844.
It's not clear if returning an invalid future is allowed by the current wording.
<p/>
If the intention is to allow an empty future to be returned, then
<sref ref="[futures.async]"/> p3 and p4 should be adjusted to clarify that a
shared state might not be created and an invalid future might be returned.
<p/>
If the intention is that a valid future is always returned, p3 should
say something about the case where none of the conditions applies.
</p>

</discussion>

<resolution>
</resolution>

</issue>
