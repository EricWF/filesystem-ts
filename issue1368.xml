<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [
  <!ENTITY nbsp "&#160;">
] >

<issue num="1368" status="C++11">
<title>Thread safety of <tt>std::uncaught_exception()</tt></title>
<section><sref ref="[uncaught]"/></section>
<submitter>BSI</submitter>
<date>25 Aug 2010</date>

<discussion>
<p><b>Addresses GB-73</b></p>
<p>
The thread safety <tt>std::uncaught_exception()</tt> and the
result of the function when multiple threads throw
exceptions at the same time are unspecified. To make the
function safe to use in the presence of exceptions in
multiple threads the specification needs to be updated.
</p>

<note>
Resolution proposed by ballot comment
</note>
<p>
Update this clause to support safe calls from
multiple threads without placing synchronization
requirements on the user.
</p>

<note>
2010 Batavia Concurrency group provides a Proposed Resolution
</note>

<note>
Adopted at 2010-11 Batavia
</note>

</discussion>

<resolution>
<p>Change <sref ref="[uncaught]"/> p. 1 as follows:</p>
<p>
<i>Returns</i>: <tt>true</tt> after <ins> the current thread has initialized </ins><del>initializing</del>
 an exception object (15.1) until a handler for the exception (including <tt>unexpected()</tt> or <tt>terminate()</tt>) 
 is activated (15.3). [ <i>Note</i>: This includes stack unwinding (15.2). &mdash; <i>end note</i> ]
</p>

</resolution>

</issue>
