<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="1272" status="NAD Editorial">
<title>confusing declarations of <tt>promise::set_value</tt></title>
<section><sref ref="[futures.promise]"/></section>
<submitter>Jonathan Wakely</submitter>
<date>22 Nov 2009</date>

<discussion>
<p>
The definitions of <tt>promise::set_value</tt> need tidying up, the
synopsis says:
</p>

<blockquote><pre>
// setting the result
void set_value(const R&amp; r);
void set_value(<i>see below</i>);
</pre></blockquote>

<p>
Why is the first one there?  It implies it is always present for all
specialisations of promise, which is not true.
</p>

<p>
The definition says:
</p>

<blockquote><pre>
void set_value(const R&amp; r);
void promise::set_value(R&amp;&amp; r);
void promise&lt;R&amp;&gt;::set_value(R&amp; r);
void promise&lt;void&gt;::set_value();
</pre></blockquote>

<p>
The lack of qualification on the first one again implies it's present
for all specialisations, again not true.
</p>

<note>
2010 Pittsburgh:  Moved to NAD Editorial.  Rationale added below.
</note>

</discussion>

<rationale>
<p>
Solved by
<a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2010/n3058.html">N3058</a>.
</p>
</rationale>

<resolution>
<p>
Change the synopsis in <sref ref="[futures.promise]"/>:
</p>

<blockquote><pre>
// setting the result
<del>void set_value(const R&amp; r);</del>
void set_value(<i>see below</i>);
</pre></blockquote>

<p>
And the definition be changed by qualifying the first signature:
</p>

<blockquote><pre>
void <ins>promise::</ins>set_value(const R&amp; r);
void promise::set_value(R&amp;&amp; r);
void promise&lt;R&amp;&gt;::set_value(R&amp; r);
void promise&lt;void&gt;::set_value();
</pre></blockquote>
</resolution>

</issue>
