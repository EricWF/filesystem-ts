<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [
  <!ENTITY nbsp "&#160;">
] >

<issue num="1508" status="Pending Resolved">
<title>[FCD] Rename <tt>packaged_task::operator bool()</tt></title>
<section><sref ref="[futures.task]"/></section>
<submitter>INCITS</submitter>
<date>25 Aug 2010</date>

<discussion>
<p><b>Addresses US-201</b></p>
<p>
<tt>packaged_task</tt> provides <tt>operator bool()</tt> to check whether
an object has an associated asynchronous state. The various <tt>future</tt> 
types provide a member function <tt>valid()</tt> that does the same thing. 
The names of these members should be the same.
</p>

<note>
Resolution proposed by ballot comment:
</note>
<blockquote>
Replaced the name <tt>packaged_task::operator bool()</tt> with <tt>packaged_task::valid()</tt> in the synopsis
(<sref ref="[futures.task]"/>/2) and the member function specification (before <sref ref="[futures.task.members]"/>/15).
</blockquote>

<note>
2010-11-02 Daniel translates proposed wording changes into a proper proposed resolution
and verified that no other places implicitly take advantage of <tt>packaged_task</tt> 
conversion to bool.
</note>

<note>Resoved in Batavia by accepting
<a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2010/n3194.html">n3194</a>.
</note>

</discussion>

<resolution>
<ol>
<li>Change <sref ref="[futures.task]"/>/2, class template <tt>packaged_task</tt> synopsis as indicated:
<blockquote><pre>
template&lt;class R, class... ArgTypes&gt;
class packaged_task&lt;R(ArgTypes...)&gt; {
public:
  typedef R result_type;
  [..]
  <del>explicit operator</del> bool <ins>valid</ins>() const;
  [..]
};
</pre></blockquote>
</li>
<li>Change <sref ref="[futures.task]"/> before p. 15 as indicated:
<blockquote><pre>
<del>explicit operator</del> bool <ins>valid</ins>() const;
</pre><blockquote>
15 <em>Returns</em>: true only if <tt>*this</tt> has an associated asynchronous state.
<p/>
16 <em>Throws</em>: nothing.
</blockquote></blockquote>
</li>
</ol>
</resolution>

</issue>
