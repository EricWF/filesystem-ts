<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="1097" status="WP">
<title>#define __STDCPP_THREADS</title>
<section><sref ref="[support.types]"/></section>
<submitter>Jens Maurer</submitter>
<date>3 Apr 2009</date>

<discussion>
<p><b>Addresses DE 18</b></p>

<p>
Freestanding implementations do not (necessarily) have
  support for multiple threads (see <sref refd="[intro.multithread]"/>).
  Applications and libraries may want to optimize for the
  absence of threads.  I therefore propose a preprocessor
  macro to indicate whether multiple threads can occur.
</p>

<p>
There is ample prior implementation experience for this
  feature with various spellings of the macro name.  For
  example, gcc implicitly defines <tt>_REENTRANT</tt>
  if multi-threading support is selected on the compiler
  command-line.
</p>

<p>
While this is submitted as a library issue, it may be more
  appropriate to add the macro in 16.8 cpp.predefined in the
  core language.
</p>

<p>
See also
<a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2693.html">N2693</a>.
</p>

<note>
Batavia (2009-05):
</note>
<blockquote>
<p>
We agree with the issue, and believe it is properly a library issue.
</p>
<p>
We prefer that the macro be conditionally defined
as part of the <tt>&lt;thread&gt;</tt> header.
</p>
<p>
Move to Review.
</p>
</blockquote>

<note>
2009-10 Santa Cruz:
</note>

<blockquote><p>
Move to Ready.
</p></blockquote>

<note>
2010-02-25 Pete moved to Open:
</note>

<blockquote>
<p>
The proposed resolution adds a feature-test macro named
<tt>__STDCPP_THREADS</tt>, described after the following new text:
</p>

<blockquote><p>
The standard library defines the following macros; no explicit prior inclusion
of any header file is necessary.
</p></blockquote>

<p>
The correct term here is "header", not "header file". But that's minor. The real
problem is that library entities are always defined in headers. If
<tt>__STDCPP_THREADS</tt> is defined without including any header it's part of
the language and belongs with the other predefined macros in the Preprocessor
clause.
</p>

<p>
Oddly enough, the comments from Batavia say "We prefer that the macro be
conditionally defined as part of the <tt>&lt;thread&gt;</tt> header." There's no
mention of a decision to change this.
</p>
</blockquote>

<note>
2010-02-26 Ganesh updates wording.
</note>

<note>
2010 Pittsburgh:  Adopt Ganesh's wording and move to Review.
</note>

<note>
2010-03-08 Pete adds:
</note>

<blockquote><p>
Most macros we have begin and end with with double underbars, this one
only begins with double underbars.
</p></blockquote>

<note>
2010 Pittsburgh:  Ganesh's wording adopted and moved to Ready for Pittsburgh.
</note>

</discussion>

<resolution>

<p>
Change <sref ref="[compliance]"/>/3:
</p>

<blockquote><p>
3 The supplied version of the header <tt>&lt;cstdlib&gt;</tt> shall
declare at least the functions <tt>abort()</tt>, <tt>atexit()</tt>, and
<tt>exit()</tt> (18.5). <ins>The supplied version of the header
<tt>&lt;thread&gt;</tt> either shall meet the same requirements as for a
hosted implementation or including it shall have no effect.</ins> The
other headers listed in this table shall meet the same requirements as
for a hosted implementation.
</p></blockquote>

<p>
Add the following line to table 15:
</p>

<blockquote>
<table border="1">
<caption>Table 15 &mdash; C++ headers for freestanding implementations</caption>

<tr>
<th>Subclause</th>
<th>Header(s)</th>
</tr>

<tr>
<td colspan="2">...</td>
</tr>

<tr>
<td><ins><sref ref="[thread.threads]"/> Threads</ins></td>
<td><ins><tt>&lt;thread&gt;</tt></ins></td>
</tr>

</table>

</blockquote>

<p>
Add to the <tt>&lt;thread&gt;</tt> synopsis in <sref
ref="[thread.threads]"/>/1 the line:
</p>

<blockquote><pre>
namespace std {

<ins>#define __STDCPP_THREADS __cplusplus</ins>

  class thread;
  ...
</pre></blockquote>


<!-- 
<p>
Insert a new subsection before <sref ref="[support.types]"/>, entitled
"Feature Macros" (support.macros):
</p>
<blockquote>
<p>
The standard library defines the following macros; no explicit
prior inclusion of any header file is necessary.
</p>
<blockquote>
<dl>
<dt><tt>__STDCPP_THREADS</tt></dt>
<dd>
The macro <tt>__STDCPP_THREADS</tt> shall be defined if and only if a
    program can have more than one thread of execution (<sref ref="[intro.multithread]"/>).
If the macro is defined, it shall have the same
    value as the predefined macro <tt>__cplusplus</tt> (<sref ref="[cpp.predefined]"/>).
</dd>
</dl>
</blockquote>
</blockquote>
 -->

</resolution>

</issue>
