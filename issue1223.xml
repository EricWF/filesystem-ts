<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="1223" status="NAD">
<title>condition_variable_any lock matching?</title>
<section><sref ref="[thread.condition.condvarany]"/></section>
<submitter>Jeffrey Yasskin</submitter>
<date>30 Sep 2009</date>

<discussion>
<p>
For <tt>condition_variable_any</tt>, must all lock arguments to concurrent wait calls
"match" in some way, similar to the requirement in
<sref ref="[thread.condition.condvar]"/> that <tt>lock.mutex()</tt> returns the same
value for each of the lock arguments supplied by all concurrently
waiting threads (via <tt>wait</tt> or <tt>timed_wait</tt>)?
</p>

<note>
2010-02-12 Moved to Tentatively NAD after 5 positive votes on c++std-lib. 
Rationale added below.
</note>

</discussion>

<rationale>
<p>
The rationale is that it doesn't matter, and you can't check: the lock types may
be different, or the same and user-defined, so the implementation must provide
internal synchronization anyway.
</p>
</rationale>

<resolution>
</resolution>

</issue>
