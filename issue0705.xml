<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="705" status="CD1">
<title>type-trait <tt>decay</tt> incompletely specified</title>
<section><sref ref="[meta.trans.other]"/></section>
<submitter>Thorsten Ottosen</submitter>
<date>8 Jul 2007</date>

<discussion>
<p>
The current working draft has a type-trait <tt>decay</tt> in <sref ref="[meta.trans.other]"/>.
</p>

<p>
Its use is to turn C++03 pass-by-value parameters into efficient C++0x
pass-by-rvalue-reference parameters. However, the current definition
introduces an incompatible change where the cv-qualification of the
parameter type is retained. The deduced type should loose such
cv-qualification, as pass-by-value does.
</p>
</discussion>

<resolution>
<p>
In <sref ref="[meta.trans.other]"/> change the last sentence:
</p>

<blockquote><p>
Otherwise the  member typedef <tt>type</tt> equals <tt><ins>remove_cv&lt;</ins>U<ins>&gt;::type</ins></tt>.
</p></blockquote>

<p>
In <sref ref="[tuple.creation]"/>/1 change:
</p>

<blockquote><p>
<del>where each <tt>Vi</tt> in <tt>VTypes</tt> is <tt>X&amp;</tt> if, for the
corresponding type <tt>Ti</tt> in <tt>Types</tt>,
<tt>remove_cv&lt;remove_reference&lt;Ti&gt;::type&gt;::type</tt> equals
<tt>reference_wrapper&lt;X&gt;</tt>, otherwise <tt>Vi</tt> is
<tt>decay&lt;Ti&gt;::type</tt>.</del>
<ins>Let <tt>Ui</tt> be <tt>decay&lt;Ti&gt;::type</tt> for each
<tt>Ti</tt> in <tt>Types</tt>. Then each <tt>Vi</tt> in <tt>VTypes</tt>
is <tt>X&amp;</tt> if <tt>Ui</tt> equals
<tt>reference_wrapper&lt;X&gt;</tt>, otherwise <tt>Vi</tt> is
<tt>Ui</tt>.</ins>
</p></blockquote>

</resolution>

</issue>
