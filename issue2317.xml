<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="2317" status="New">
<title>The type property queries should be <tt>UnaryTypeTraits</tt> returning <tt>size_t</tt></title>
<section><sref ref="[meta.unary.prop.query]"/></section>
<submitter>Stephan T. Lavavej</submitter>
<date>21 Sep 2013</date>

<discussion>
<p>
The sibling sections <sref ref="[meta.unary]"/>, <sref ref="[meta.rel]"/>, and <sref ref="[meta.trans]"/> respectively specify 
<tt>UnaryTypeTraits</tt>, <tt>BinaryTypeTraits</tt>, and <tt>TransformationTraits</tt>, as stated by each /2 paragraph.  However, 
<sref ref="[meta.unary.prop.query]"/> is underspecified. <tt>alignment_of</tt>, <tt>rank</tt>, and <tt>extent</tt> are said to produce 
"Values", but the type of that Value is not specified, and the struct templates are not required to derive from <tt>integral_constant</tt>.  
Such derivation is more than stylistic &mdash; it allows the structs to be passed to functions taking <tt>integral_constant</tt>.
<p/>
<tt>alignment_of</tt> returns <tt>alignof(T)</tt> which is <tt>size_t</tt> (<sref ref="[expr.alignof]"/>/2). <tt>extent</tt> returns 
an array bound, which is clearly <tt>size_t</tt>. <tt>rank</tt> returns "the number of dimensions" of an array, so any type could 
be chosen, with <tt>size_t</tt> being a reasonable choice. (Another choice would be <tt>unsigned int</tt>, to match <tt>extent</tt>'s 
template parameter <tt>I</tt>.)
</p>
</discussion>

<resolution>
<p>This wording is relative to N3691.</p>

<ol>
<li><p>Following <sref ref="[meta.unary.prop.query]"/>/1 add a new paragraph as indicated:</p>

<blockquote><p>
<ins>Each of these templates shall be a <tt>UnaryTypeTrait</tt> (<sref ref="[meta.rqmts]"/>) with a <tt>BaseCharacteristic</tt> of 
<tt>integral_constant&lt;size_t, Value&gt;</tt>.</ins>
</p>
</blockquote>
</li>

</ol>
</resolution>

</issue>
