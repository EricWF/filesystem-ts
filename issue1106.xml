<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="1106" status="NAD Editorial">
<title>Multiple exceptions from connected <tt>shared_future::get()</tt>?</title>
<section><sref ref="[futures.shared_future]"/></section>
<submitter>Thomas J. Gritzan</submitter>
<date>3 Apr 2009</date>

<discussion>
<p>
It is not clear, if multiple threads are waiting in a 
<tt>shared_future::get()</tt> call, if each will rethrow the stored exception.
</p>
<p>
Paragraph 9 reads: 
</p>
<blockquote>
<i>Throws:</i> the stored exception, if an exception was stored and not 
retrieved before.
</blockquote>
<p>
The "not retrieved before" suggests that only one exception is thrown, 
but one exception for each call to <tt>get()</tt> is needed, and multiple calls 
to <tt>get()</tt> even on the same <tt>shared_future</tt> object seem to be allowed. 
</p>
<p>
I suggest removing "and not retrieved before" from the Throws paragraph. 
I recommend adding a note that explains that multiple calls on <tt>get()</tt> are 
allowed, and each call would result in an exception if an exception was 
stored. 
</p>

<note>
Batavia (2009-05):
</note>
<blockquote>
<p>
We note there is a pending paper by Detlef
on such <tt>future</tt>-related issues;
we would like to wait for his paper before proceeding.
</p>
<p>
Alisdair suggests we may want language to clarify that this
<tt>get()</tt> function can be called from several threads
with no need for explicit locking.
</p>
<p>
Move to Open.
</p>
</blockquote>

<note>
2010-01-23 Moved to Tentatively NAD Editorial after 5 positive votes on
c++std-lib.
</note>

</discussion>

<rationale>
<p>
Resolved by paper
<a href="file:///Users/hinnant/std%20documents/C++Mailings/papers/2009/n2997.htm">N2997</a>.
</p>
</rationale>

<resolution>
<p>
Change <sref ref="[futures.shared_future]"/>:
</p>

<blockquote><pre>
const R&amp; shared_future::get() const; 
R&amp; shared_future&lt;R&amp;&gt;::get() const; 
void shared_future&lt;void&gt;::get() const;
</pre>
<blockquote>
<p>...</p>
<p>
-9- <i>Throws:</i> the stored exception, if an exception was stored<del> and not retrieved before</del>.
<ins>
[<i>Note:</i> Multiple calls on <tt>get()</tt> are 
allowed, and each call would result in an exception if an exception was 
stored. &mdash; <i>end note</i>]
</ins>
</p>
</blockquote>
</blockquote>

</resolution>

</issue>
