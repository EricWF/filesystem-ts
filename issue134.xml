<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="134" status="TC1">
<title>vector constructors over specified</title>
<section><sref ref="[vector.cons]"/></section>
<submitter>Howard Hinnant</submitter>
<date>6 Mar 1999</date>

<discussion>
<p>The complexity description says: &quot;It does at most 2N calls to the copy constructor
of T and logN reallocations if they are just input iterators ...&quot;.</p>

<p>This appears to be overly restrictive, dictating the precise memory/performance
tradeoff for the implementor.</p>
</discussion>

<resolution>
<p>Change <sref ref="[vector.cons]"/>, paragraph 1 to:</p>

<p>-1- Complexity: The constructor template &lt;class
InputIterator&gt; vector(InputIterator first, InputIterator last)
makes only N calls to the copy constructor of T (where N is the
distance between first and last) and no reallocations if iterators
first and last are of forward, bidirectional, or random access
categories. It makes order N calls to the copy constructor of T and
order logN reallocations if they are just input iterators.
</p>
</resolution>

<rationale>
<p>&quot;at most 2N calls&quot; is correct only if the growth factor
is greater than or equal to 2.
</p>
</rationale>
</issue>
