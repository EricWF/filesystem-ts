<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="169" status="TC1">
<title>Bad efficiency of <tt>overflow()</tt> mandated</title>
<section><sref ref="[stringbuf.virtuals]"/></section>
<submitter>Dietmar K&uuml;hl</submitter>
<date>20 Jul 1999</date>

<discussion>
<p>Paragraph 8, Notes, of this section seems to mandate an extremely
inefficient way of buffer handling for <tt>basic_stringbuf</tt>,
especially in view of the restriction that <tt>basic_ostream</tt>
member functions are not allowed to use <tt>xsputn()</tt> (see <sref ref="[ostream]"/>): For each character to be inserted, a new buffer
is to be created.</p> 
<p>Of course, the resolution below requires some handling of
simultaneous input and output since it is no longer possible to update
<tt>egptr()</tt> whenever <tt>epptr()</tt> is changed. A possible
solution is to handle this in <tt>underflow()</tt>.</p>
</discussion>

<resolution>
<p>In <sref ref="[stringbuf.virtuals]"/> paragraph 8, Notes, insert the words
&quot;at least&quot; as in the following:</p>
<blockquote>
  <p>To make a write position available, the function reallocates (or initially
  allocates) an array object with a sufficient number of elements to hold the
  current array object (if any), plus <b>at least</b> one additional write
  position.</p>
</blockquote>
</resolution>
</issue>
