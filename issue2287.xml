<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="2287" status="New">
<title>Incorrect exception safety for <tt>optional</tt> copy assignment operator</title>
<section><sref ref="[optional.object.assign]"/></section>
<submitter>Howard Hinnant</submitter>
<date>16 Aug 2013</date>

<discussion>
<p>
The <i>Exception safety</i> paragraph of <sref ref="[optional.object.assign]"/> calls out <tt>T</tt>'s copy constructor when 
it should refer to <tt>T</tt>'s copy assignment operator.
</p>

</discussion>

<resolution>
<p>This wording is relative to N3691.</p>

<ol>
<li><p>Change <sref ref="[optional.object.assign]"/> as indicated:</p>

<blockquote><pre>
optional&lt;T&gt;&amp; operator=(const optional&lt;T&gt;&amp; rhs);
</pre>
<blockquote>
<p>
[&hellip;]
<p/>
-8- <i>Exception safety:</i> If any exception is thrown, the values of <tt>init</tt> and <tt>rhs.init</tt> remain unchanged. If
an exception is thrown during the call to <tt>T</tt>'s copy constructor, no effect. If an exception is thrown
during the call to <tt>T</tt>'s copy assignment, the state of its contained value is as defined by the exception
safety guarantee of <tt>T</tt>'s copy <del>constructor</del><ins>assignment operator</ins>.
</p>
</blockquote></blockquote>
</li>

</ol>
</resolution>

</issue>
