<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="992" status="NAD">
<title>Response to UK 169</title>
<section><sref ref="[contents]"/></section>
<submitter>P.J. Plauger</submitter>
<date>3 Mar 2009</date>

<discussion>
<p><b>Addresses UK 169</b></p>
<p>
This phrasing contradicts later freedom to implement the C standard
library portions in the global namespace as well as std. (17.6.2.3p4)
</p>

<note>
Batavia (2009-05):
</note>
<blockquote><p>
The proposed wording seems to go too far.
Move back to Open.
</p></blockquote>

<note>
2009-07 Frankfurt:
</note>

<blockquote>
<p>
Howard to add NB reference to the description of this issue.
</p>
<p>
Move to NAD. This comment is informative and not normative by the use of
the word "are" instead of the word "shall."
</p>
<p>
A note linking to Annex D would help clarify the intention, here.
</p>
<p>
Robert to Open a separate issue proposing that the standard C headers be
undeprecated, for the purpose of clarifying the standard.
</p>
</blockquote>

<note>
2009-07-22 Bill modified the proposed wording with a clarifying footnote.
</note>

</discussion>

<resolution>
<p>
Add a footnote to <sref ref="[contents]"/>, p2:
</p>

<blockquote>
<p>
-2- All library entities except macros, <tt>operator new</tt> and <tt>operator
delete</tt> are defined within the namespace <tt>std</tt> or namespaces
nested within namespace <tt>std</tt><ins><sup>*</sup></ins>.
</p>

<p><ins>
<sup>*</sup>The C standard library headers <sref ref="[depr.c.headers]"/> also define
names within the global namespace, while the C++ headers for
C library facilities <sref ref="[headers]"/> may also define names within
the global namespace.
</ins></p>
</blockquote>

</resolution>

</issue>
