<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [
  <!ENTITY nbsp "&#160;">
] >

<issue num="1479" status="C++11">
<title>Fence functions should be <tt>extern "C"</tt></title>
<section><sref ref="[atomics.fences]"/></section>
<submitter>INCITS</submitter>
<date>25 Aug 2010</date>

<discussion>
<p><b>Addresses US-179</b></p>
<p>
The fence functions (<sref ref="[atomics.fences]"/> p.5 + p.6) should be <tt>extern "C"</tt>, for <tt>C</tt> compatibility.
</p>

<note>2011-02-16 Reflector discussion</note>
<p>
Moved to Tentatively Ready after 6 votes.
</p>

</discussion>

<resolution>
<ol>
<li>Change <sref ref="[atomics.syn]"/>, header <tt>&lt;atomic&gt;</tt> synopsis as indicated:
<blockquote><pre>
namespace std {
  [..]
  // <em>29.8, fences</em>
  <ins>extern "C"</ins> void atomic_thread_fence(memory_order);
  <ins>extern "C"</ins> void atomic_signal_fence(memory_order);  
}
</pre></blockquote>
</li>
<li><p>Change <sref ref="[atomics.fences]"/>, p. 5 and p. 6 as indicated:</p>
<blockquote><pre>
<ins>extern "C"</ins> void atomic_thread_fence(memory_order);
</pre><blockquote><p>
5 <em>Effects</em>: depending on the value of <tt>order</tt>, this operation: [..]
</p></blockquote></blockquote>
<blockquote><pre>
<ins>extern "C"</ins> void atomic_signal_fence(memory_order);  
</pre><blockquote><p>
6 <em>Effects</em>: equivalent to <tt>atomic_thread_fence(order)</tt>, except that synchronizes with relationships are
established only between a thread and a signal handler executed in the same thread.
</p></blockquote></blockquote>
</li>
</ol>
</resolution>

</issue>
