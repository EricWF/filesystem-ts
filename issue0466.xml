<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="466" status="NAD">
<title>basic_string ctor should prevent null pointer error</title>
<section><sref ref="[string.require]"/></section>
<submitter>Daniel Frey</submitter>
<date>10 Jun 2004</date>

<discussion>
<p>
Today, my colleagues and me wasted a lot of time. After some time, I
found the problem. It could be reduced to the following short example:
</p>

<pre>
  #include &lt;string>
  int main() { std::string( 0 ); }
</pre>

<p>The problem is that the tested compilers (GCC 2.95.2, GCC 3.3.1 and
Comeau online) compile the above without errors or warnings! The
programs (at least for the GCC) resulted in a SEGV.</p>

<p>I know that the standard explicitly states that the ctor of string
requires a char* which is not zero. STLs could easily detect the above
case with a private ctor for basic_string which takes a single 'int'
argument. This would catch the above code at compile time and would not
ambiguate any other legal ctors.</p>

<note>Redmond: No great enthusiasm for doing this.  If we do,
  however, we want to do it for all places that take <tt>charT*</tt>
  pointers, not just the single-argument constructor.  The other
  question is whether we want to catch this at compile time (in which
  case we catch the error of a literal 0, but not an expression whose
  value is a null pointer), at run time, or both.
  Recommend NAD.  Relegate this functionality to debugging implementations.</note>

<note>
Post Summit: Alisdair requests this be re-opened as several new language facilities are
designed to solve exactly this kind of problem.
</note>

<note>
Batavia (2009-05):
</note>
<blockquote>
We are unable to achieve consensus on an approach to a resolution.
There is some sentiment for treating this as a QOI matter.
It is also possible
that when <tt>string</tt> is brought into the concepts world,
this issue might be addressed in that context.
</blockquote>

<note>
2009-07 Frankfurt
</note>

<blockquote>
<p>
We considered three options:
</p>

<ul>
<li>The proposed resolution.</li>
<li>NAD</li>
<li>Interpret a null pointer as the empty string.</li>
</ul>

<p>
The consensus was NAD.
</p>
</blockquote>

</discussion>

<resolution>
<p>
Add to the synopsis in <sref ref="[basic.string]"/>
</p>

<blockquote><pre>
<ins>basic_string( nullptr_t ) = delete;</ins>
</pre></blockquote>
</resolution>

</issue>
