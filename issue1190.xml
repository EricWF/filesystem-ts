<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="1190" status="Pending NAD">
<title>Setting the maximum load factor should return the previous value</title>
<section><sref ref="[unord.req]"/>, <sref ref="[unord]"/></section>
<submitter>Matt Austern</submitter>
<date>10 Aug 2009</date>

<discussion>
<p>
The unordered associative container requirements table specifies that
<tt>a.set_max_load_factor(z)</tt> has return type <tt>void</tt>. However, there is a
useful piece of information to return: the previous value. Users who
don't need it can always ignore it.
</p>


<note>
2010 Rapperswil:
</note>

<blockquote>
The benefit seems minor, while breaking with the getter/setter idiom these overloads support.

Move to Tentatively NAD.
</blockquote>

</discussion>

<resolution>
<p>
In the unordered associative container requirements table, change:
</p>

<blockquote>
<table border="1">
<caption>Table 87 &mdash; Unordered associative container requirements
(in addition to container)</caption>

<tr>
<th>Expression</th><th>Return type</th><th>Assertion/note pre-/post-condition</th>
<th>Complexity</th>
</tr>

<tr>
<td><tt>a.max_load_factor(z)</tt></td>
<td><tt><del>void</del> <ins>float</ins></tt></td>
<td>Pre: <tt>z</tt> shall be positive. Changes the container's maximum
<del>load</del> load factor, using <tt>z</tt> as a hint.
<ins>Returns: the previous value of
<tt>a.max_load_factor()</tt>.</ins>
</td>
<td>
constant
</td>
</tr>
<tr></tr>
</table>
</blockquote>

<p>
Change the return type of <tt>set_max_load_factor</tt>
in the class synopses in <sref ref="[unord.map]"/>, <sref ref="[unord.multimap]"/>,  <sref ref="[unord.set]"/>,
and <sref ref="[unord.multiset]"/>.
</p>

<p>
If issue <iref ref="1188"/> is also accepted, make the same changes for
<tt>min_load_factor</tt>.
</p>
</resolution>

</issue>
