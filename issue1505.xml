<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [
  <!ENTITY nbsp "&#160;">
] >

<issue num="1505" status="Resolved">
<title>[FCD] Synchronization between
<tt>promise::set_value</tt> and <tt>future::get</tt></title>
<section><sref ref="[futures.promise]"/></section>
<submitter>INCITS</submitter>
<date>25 Aug 2010</date>

<discussion>
<p><b>Addresses US-197</b></p>
<p>
There is no defined synchronization between
<tt>promise::set_value</tt> and <tt>future::get</tt> (<sref ref="[futures.promise]"/> p. 21, 25).
</p>
<note>
Resolution proposed by ballot comment:
</note>
<blockquote><p>
Replace "[<i>Note</i>: and they synchronize and
serialize with other functions through the referred
associated asynchronous state. &mdash; <i>end note</i>]" with
the normative "They synchronize with (1.10) any
operation on a future object with the same
associated asynchronous state marked ready."
</p></blockquote>

<note>
2010-11-02 Daniel translates proposal into proper wording changes
</note>

<note>2011-03-19: Detlef comments</note>

<p>The proposed resolution for <iref ref="1507"/> would cover this issue as well.
Effectively it will reject the request but a clarification is added that the 
normative wording is already in <sref ref="[futures.state]"/>.</p>

<note>
<ol>
<li>Change <sref ref="[futures.promise]"/> p. 21 as indicated:
<blockquote><p>
21 <em>Synchronization</em>: calls to <tt>set_value</tt> and <tt>set_exception</tt> on a single 
<tt>promise</tt> object are serialized.
<del>[ <em>Note</em>: and they synchronize and serialize with other functions through the referred associated asynchronous
state. &mdash; <em>end note</em> ]</del><ins>They <em>synchronize with</em> ([intro.multithread]) any
operation on a future object with the same associated asynchronous state marked ready.</ins>
</p></blockquote>
</li>
<li>Change <sref ref="[futures.promise]"/> p. 25 as indicated:
<blockquote><p>
25 <em>Synchronization</em>: calls to <tt>set_value</tt> and <tt>set_exception</tt> on a single 
<tt>promise</tt> object are serialized.
<del>[ <em>Note</em>: and they synchronize and serialize with other functions through the referred associated asynchronous
state. &mdash; <em>end note</em> ]</del><ins>They <em>synchronize with</em> ([intro.multithread]) any
operation on a future object with the same associated asynchronous state marked ready.</ins>
</p></blockquote>
</li>
</ol>
</note>
</discussion>

<resolution>
Resolved 2001-03 Madrid by issue 1507.
</resolution>
<
</issue>
