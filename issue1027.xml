<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="1027" status="NAD Concepts">
<title>Response to UK 213</title>
<section><sref ref="[default.allocator]"/></section>
<submitter>Alisdair Meredith</submitter>
<date>11 Mar 2009</date>

<discussion>

<p><b>Addresses UK 213</b></p>

<p>
<tt>std::allocator</tt> should be constrained to simplify its use on constrained
contexts. This library component models allocation from free store via the
new operator so choose constraints to 
match. The Allocator concept allows for a wider variety of allocators that
users may choose to supply if their allocation model does not require
operator new, without impacting the 
requirements of this template. 
</p>

<p>
Suggested direction:
</p>
<p>
The primary allocator template should be constrained to require
<tt>ObjectType&lt;T&gt;</tt> and <tt>FreeStoreAllocatable&lt;T&gt;</tt>.
Further operations to be constrained as required.
</p>

<note>
Summit:
</note>

<blockquote><p>
Agree as stated. A future paper will address additional related issues.
</p></blockquote>

</discussion>

<resolution>
</resolution>

</issue>
