<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="1222" status="C++11">
<title>condition_variable incorrect effects for exception safety</title>
<section><sref ref="[thread.condition]"/></section>
<submitter>Jeffrey Yasskin</submitter>
<date>30 Sep 2009</date>

<discussion>
<p>
<sref ref="[thread.condition.condvar]"/> says:
</p>

<blockquote>
<pre>
void wait(unique_lock&lt;mutex&gt;&amp; lock);
</pre>
<blockquote>
<p>...</p>
<p>
<i>Effects:</i>
</p>
<ul>
<li>...</li>
<li>
If the function exits via an exception, <tt>lock.unlock()</tt> shall be
called prior to exiting the function scope.
</li>
</ul>
</blockquote>
</blockquote>

<p>
Should that be <tt>lock.lock()</tt>?
</p>

<note>
2009-11-17 Moved to Tentatively Ready after 5 positive votes on c++std-lib.
</note>
</discussion>

<resolution>

<p>
Change <sref ref="[thread.condition.condvar]"/> p10:
</p>

<blockquote>
<pre>
void wait(unique_lock&lt;mutex&gt;&amp; lock);
</pre>
<blockquote>
<p>...</p>
<p>
<i>Effects:</i>
</p>
<ul>
<li>...</li>
<li>
If the function exits via an exception, <tt>lock.<del>un</del>lock()</tt> shall be
called prior to exiting the function scope.
</li>
</ul>
</blockquote>
</blockquote>

<p>
And make a similar change in p16, and in <sref ref="[thread.condition.condvarany]"/>,
p8 and p13.
</p>

</resolution>

</issue>
