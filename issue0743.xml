<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="743" status="CD1">
<title>rvalue <tt>swap</tt> for <tt>shared_ptr</tt></title>
<section><sref ref="[util.smartptr.shared.spec]"/></section>
<submitter>Howard Hinnant</submitter>
<date>10 Oct 2007</date>

<discussion>
<p>
When the LWG looked at <iref ref="674"/> in Kona the following note was made:
</p>

<blockquote><p>
We may need to open an issue to deal with the question of
whether <tt>shared_ptr</tt> needs an rvalue <tt>swap</tt>.
</p></blockquote>

<p>
This issue was opened in response to that note.
</p>

<p>
I believe allowing rvalue <tt>shared_ptr</tt>s to <tt>swap</tt> is both
appropriate, and consistent with how other library components are currently specified.
</p>

<note>
Bellevue:
</note>

<blockquote>
<p>
Concern that the three signatures for swap is needlessly complicated,
but this issue merely brings shared_ptr into equal complexity with the
rest of the library. Will open a new issue for concern about triplicate
signatures.
</p>
<p>
Adopt issue as written.
</p>
</blockquote>
</discussion>

<resolution>
<p>
Change the synopsis in <sref ref="[util.smartptr.shared]"/>:
</p>

<blockquote><pre>
void swap(shared_ptr&amp;<ins>&amp;</ins> r);
...
template&lt;class T&gt; void swap(shared_ptr&lt;T&gt;&amp; a, shared_ptr&lt;T&gt;&amp; b);
<ins>template&lt;class T&gt; void swap(shared_ptr&lt;T&gt;&amp;&amp; a, shared_ptr&lt;T&gt;&amp; b);
template&lt;class T&gt; void swap(shared_ptr&lt;T&gt;&amp; a, shared_ptr&lt;T&gt;&amp;&amp; b);</ins>
</pre></blockquote>

<p>
Change <sref ref="[util.smartptr.shared.mod]"/>:
</p>

<blockquote><pre>
void swap(shared_ptr&amp;<ins>&amp;</ins> r);
</pre></blockquote>

<p>
Change <sref ref="[util.smartptr.shared.spec]"/>:
</p>

<blockquote><pre>
template&lt;class T&gt; void swap(shared_ptr&lt;T&gt;&amp; a, shared_ptr&lt;T&gt;&amp; b);
<ins>template&lt;class T&gt; void swap(shared_ptr&lt;T&gt;&amp;&amp; a, shared_ptr&lt;T&gt;&amp; b);
template&lt;class T&gt; void swap(shared_ptr&lt;T&gt;&amp; a, shared_ptr&lt;T&gt;&amp;&amp; b);</ins>
</pre></blockquote>
</resolution>

</issue>
