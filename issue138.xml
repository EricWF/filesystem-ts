<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="138" status="NAD">
<title>Class ctype_byname&lt;char&gt; redundant and misleading</title>
<section><sref ref="[locale.codecvt]"/></section>
<submitter>Angelika Langer</submitter>
<date>18 Mar 1999</date>

<discussion>
<p>Section <sref ref="[locale.codecvt]"/> specifies that
ctype_byname&lt;char&gt; must be a specialization of the ctype_byname
template.</p>

<p>It is common practice in the standard that specializations of class templates are only
mentioned where the interface of the specialization deviates from the interface of the
template that it is a specialization of. Otherwise, the fact whether or not a required
instantiation is an actual instantiation or a specialization is left open as an
implementation detail. </p>

<p>Clause 22.2.1.4 deviates from that practice and for that reason is misleading. The
fact, that ctype_byname&lt;char&gt; is specified as a specialization suggests that there
must be something &quot;special&quot; about it, but it has the exact same interface as the
ctype_byname template. Clause 22.2.1.4 does not have any explanatory value, is at best
redundant, at worst misleading - unless I am missing anything. </p>

<p>Naturally, an implementation will most likely implement ctype_byname&lt;char&gt; as a
specialization, because the base class ctype&lt;char&gt; is a specialization with an
interface different from the ctype template, but that's an implementation detail and need
not be mentioned in the standard. </p>

<note>
Summit:
</note>

<blockquote>
Reopened by Alisdair.
</blockquote>

<note>
2009-07 Frankfurt
</note>

<blockquote>
Moved to NAD.
</blockquote>

</discussion>

<rationale>
<p> The standard as written is mildly misleading, but the correct fix
is to deal with the underlying problem in the ctype_byname base class,
not in the specialization. See issue <iref ref="228"/>.</p>
</rationale>
</issue>
