<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="2131" status="New">
<title>Member function getline taking a string as parameter</title>
<section><sref ref="[istream.unformatted]"/></section>
<submitter>Lo&iuml;c Joly</submitter>
<date>5 Mar 2012</date>

<discussion>
<p>
I think the following code should be legal:
</p>
<blockquote><pre>
void f(std::istream&amp; is)
{
  std::string s;
  is.getline(s); // Would be equivalent to std::getline(is, s)
}
</pre></blockquote>

</discussion>

<resolution>
<p>This wording is relative to the N3376.</p>

<ol>
<li><p>Change the class template <tt>basic_istream</tt> synopsis, <sref ref="[istream]"/>, as indicated</p>
<blockquote><pre>
namespace std {
  template &lt;class charT, class traits = char_traits&lt;charT&gt; &gt;
  class basic_istream : virtual public basic_ios&lt;charT,traits&gt; {
  public:
    [&hellip;]
    <i>// 27.7.2.3 Unformatted input:</i>
    [&hellip;]
    basic_istream&lt;charT,traits&gt;&amp; getline(char_type* s, streamsize n);
    basic_istream&lt;charT,traits&gt;&amp; getline(char_type* s, streamsize n,
      char_type delim);
    <ins>template&lt;class Allocator&gt;
    basic_istream&lt;charT,traits&gt;&amp; getline(basic_string&lt;charT,traits,Allocator&gt;&amp; str);
    template&lt;class Allocator&gt;
    basic_istream&lt;charT,traits&gt;&amp; getline(basic_string&lt;charT,traits,Allocator&gt;&amp; str,
      char_type delim);</ins>
    [&hellip;]
  };
}
</pre></blockquote>
</li>

<li><p>Insert the following two new prototype descriptions after <sref ref="[istream.unformatted]"/> paragraph 24:</p>

<blockquote>
<pre>
basic_istream&lt;charT,traits&gt;&amp; getline(char_type* s, streamsize n);
</pre>
<blockquote><p>
-24- <i>Returns</i>: <tt>getline(s,n,widen('\n'))</tt>
</p>
</blockquote>

<pre>
<ins>template&lt;class Allocator&gt;
basic_istream&lt;charT,traits&gt;&amp; getline(basic_string&lt;charT,traits,Allocator&gt;&amp; str);</ins>
</pre>
<blockquote><p>
<ins>-??- <i>Returns</i>: <tt>std::getline(*this, str)</tt></ins>
</p>
</blockquote>

<pre>
<ins>template&lt;class Allocator&gt;
basic_istream&lt;charT,traits&gt;&amp; getline(basic_string&lt;charT,traits,Allocator&gt;&amp; str, char_type delim);</ins>
</pre>
<blockquote><p>
<ins>-??- <i>Returns</i>: <tt>std::getline(*this, str, delim)</tt></ins>
</p>
</blockquote>

</blockquote>
</li>
</ol>

</resolution>

</issue>
