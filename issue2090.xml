<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="2090" status="New">
<title>Minor Overconstraint in Mutex Types</title>
<section><sref ref="[thread.mutex.requirements.mutex]"/></section>
<submitter>Pete Becker</submitter>
<date>17 Oct 2011</date>

<discussion>

<p>
<sref ref="[thread.mutex.requirements.mutex]"/>&#47;6, fourth bullet requires the 
return type of <tt>m.lock()</tt> to be <tt>void</tt>. 
<p/>
This is over-constrained. The true requirement is that the standard library 
ignores any value that the function returns. Yes, allowing non-void return 
types means that users can't store a pointer to this member function. No, 
that's not the least bit important.
<p/>
[See also the discussion following c++std-lib-31318]
</p>

</discussion>

<resolution>
</resolution>

</issue>
