<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="208" status="TC1">
<title>Unnecessary restriction on past-the-end iterators</title>
<section><sref ref="[iterator.concepts]"/></section>
<submitter>Stephen Cleary</submitter>
<date>02 Feb 2000</date>

<discussion>
<p>In 24.1 paragraph 5, it is stated &quot;. . . Dereferenceable and
past-the-end values are always non-singular.&quot;</p>
<p>This places an unnecessary restriction on past-the-end iterators for
containers with forward iterators (for example, a singly-linked list). If the
past-the-end value on such a container was a well-known singular value, it would
still satisfy all forward iterator requirements.</p>
<p>Removing this restriction would allow, for example, a singly-linked list
without a &quot;footer&quot; node.</p>
<p>This would have an impact on existing code that expects past-the-end
iterators obtained from different (generic) containers being not equal.</p>
</discussion>

<resolution>
<p>Change <sref ref="[iterator.concepts]"/> paragraph 5, the last sentence, from:</p>
<blockquote>
<p>Dereferenceable and past-the-end values are always non-singular.</p>
</blockquote>
<p>to:</p>
<blockquote>
<p>Dereferenceable values are always non-singular.&nbsp;</p>
</blockquote>
</resolution>

<rationale>
<p>For some kinds of containers, including singly linked lists and
zero-length vectors, null pointers are perfectly reasonable past-the-end
iterators.  Null pointers are singular.
</p>
</rationale>
</issue>
