<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="989" status="NAD Concepts">
<title>late_check and library</title>
<section><sref ref="[library]"/></section>
<submitter>Alisdair Meredith</submitter>
<date>24 Feb 2009</date>

<discussion>
<p>
The example in 6.9p2 shows how late_check blocks inhibit concept_map lookup
inside a constrained context, and so inhibit concept map adaption by users
to meet template requirements.
</p>
<p>
Do we need some text in clause 17 prohibitting use of late_check in library
template definitions unless otherwise documented?
</p>

<note>
Doug adds:
</note>

<blockquote>
We need something like this, but it should be a more general statement
about implementations respecting the concept maps provided by the
user. Use of late_check is one way in which implementations can
subvert the concept maps provided by the user, but there are other
ways as well ("pattern-based" overloading, tricks with "auto" concept
maps and defaulted associated type arguments).
</blockquote>

<note>
Batavia (2009-05):
</note>
<blockquote>
Move to Open, pending proposed wording from Alisdair and/or Doug for further review.
</blockquote>
</discussion>

<resolution>
</resolution>

</issue>
