<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="2169" status="New">
<title>Missing <tt>reset()</tt> requirements in <tt>unique_ptr</tt> specialization</title>
<section><sref ref="[unique.ptr.runtime.modifiers]"/></section>
<submitter>Geoffrey Romer</submitter>
<date>16 Jul 2012</date>

<discussion>

<p>
In <sref ref="[unique.ptr.runtime.modifiers]"/>/p1-2 of N3376, the description of <tt>reset()</tt> in the 
array specialization of <tt>unique_ptr</tt> partially duplicates the description of the base template method 
(as specified in <sref ref="[unique.ptr.single.modifiers]"/>/p3-5), but lacks some significant requirements. 
Specifically, the text introduced in LWG <iref ref="998"/>, and item 13 of LWG <iref ref="762"/>, is present 
only in the base template, not the specialization.
<p/>
This gives the appearance that these requirements specifically do not apply to the specialization, which I 
don't believe is correct or intended: the issue of <tt>reset()</tt> operation order addressed by LWG <iref ref="998"/> 
applies just as much to the derived template as to the base template, and the derived template has just as 
much need to rely on <tt>get_deleter()(get())</tt> being well-defined, well-formed, and not throwing exceptions 
(arguably some of those properties follow from the fact that <tt>T</tt> is required to be a complete type, but 
not all).
<p/>
Assuming the derived template's <tt>reset()</tt> semantics are intended to be identical to the base template's, 
there is no need to explicitly specify the semantics of <tt>reset(pointer p)</tt> at all (since 
<sref ref="[unique.ptr.runtime]"/>/3 specifies "Descriptions are provided below only for member functions that 
have behavior different from the primary template."), and <tt>reset(nullptr_t p)</tt> can be specified by 
reference to the 'pointer' overload. This is more concise, and eliminates any ambiguity about intentional vs. 
accidental discrepancies.
</p>

</discussion>

<resolution>
<p>This wording is relative to N3376.</p>

<p>Change <sref ref="[unique.ptr.runtime.modifiers]"/> as indicated:</p>

<blockquote><pre>
<del>void reset(pointer p = pointer()) noexcept;</del>
void reset(nullptr_t p) noexcept;
</pre><blockquote>
<p>
-1- <i>Effects</i>: <del>If <tt>get() == nullptr</tt> there are no effects. Otherwise <tt>get_deleter()(get())</tt></del>
<ins>Equivalent to <tt>reset(pointer())</tt></ins>.
<p/>
<del>-2- <i>Postcondition</i>: <tt>get() == p</tt>.</del>
</p>
</blockquote></blockquote>

</resolution>

</issue>
