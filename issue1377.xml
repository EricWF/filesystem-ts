<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [
  <!ENTITY nbsp "&#160;">
] >

<issue num="1377" status="Pending NAD Editorial">
<title>[FCD] The revised <tt>forward</tt> is not compatible with access-control</title>
<section><sref ref="[utility]"/></section>
<submitter>INCITS</submitter>
<date>25 Aug 2010</date>

<discussion>
<p><b>Addresses US-90</b></p>
<p>
In n3090, at variance with previous iterations of the idea
discussed in papers and incorporated in WDs,
<tt>std::forward</tt> is constrained via <tt>std::is_convertible</tt>,
thus is not robust wrt access control. This causes problems in
normal uses as implementation detail of member
functions. For example, the following snippet leads to a
compile time failure, whereas that was not the case for an
implementation along the lines of n2835 (using <tt>enable_if</tt>s
instead of concepts for the constraining, of course)
</p>
<pre>
#include &lt;utility>
struct Base { Base(Base&amp;&amp;); };

struct Derived
  : private Base
{
  Derived(Derived&amp;&amp; d)
    : Base(std::forward&lt;Base>(d)) { }
};
</pre>
<p>
In other terms, LWG 1054 can be resolved in a better
way, the present status is not acceptable.
</p>

<note>
2010-10-24 Daniel adds:
</note>

<blockquote>
Accepting <a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2010/n3143.html">n3143</a> would solve this issue.
</blockquote>

</discussion>

<resolution>
Resolved as NAD Editorial by paper <a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2010/n3143.html">n3143</a>.
</resolution>

</issue>
