<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="682" status="CD1">
<title>basic_regex ctor takes InputIterator or ForwardIterator?</title>
<section><sref ref="[re.regex.construct]"/></section>
<submitter>Eric Niebler</submitter>
<date>3 Jun 2007</date>

<discussion>
<p>
Looking at N2284, <sref ref="[re.regex]"/>, p3 <tt>basic_regex</tt> class template synopsis shows this 
constructor: 
</p>
<blockquote><pre>
template &lt;class InputIterator&gt;
     basic_regex(InputIterator first, InputIterator last, 
                 flag_type f = regex_constants::ECMAScript);
</pre></blockquote>

<p>
In <sref ref="[re.regex.construct]"/>, p15, the constructor appears with this signature: 
</p>

<blockquote><pre>
template &lt;class ForwardIterator&gt;
     basic_regex(ForwardIterator first, ForwardIterator last, 
                 flag_type f = regex_constants::ECMAScript);
</pre></blockquote>

<p>
<tt>ForwardIterator</tt> is probably correct, so the synopsis is wrong.
</p>

<note>
John adds:
</note>

<blockquote>
<p>
I think either could be implemented?  Although an input iterator would 
probably require an internal copy of the string being made.
</p>
<p>
I have no strong feelings either way, although I think my original intent 
was <tt>InputIterator</tt>. 
</p>
</blockquote>
</discussion>

<resolution>
<p>
Adopt the proposed resolution in
<a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2409.pdf">N2409</a>.
</p>
</resolution>

<note>
Kona (2007): The LWG adopted the proposed resolution of N2409 for this issue.
The LWG voted to accelerate this issue to Ready status to be voted into the WP at Kona.
</note>

</issue>
