<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="2002" status="Pending NAD Editorial">
<title>Class template <tt>match_results</tt> does not specify the semantics of <tt>operator==</tt></title>
<section><sref ref="[re.results.nonmember]"/></section>
<submitter>Daniel Kr&uuml;gler</submitter>
<date>24 Oct 2010</date>

<discussion>
<p>
The <em>Returns</em> element of <tt>operator==</tt> says:
</p>

<blockquote>
<tt>true</tt> only if the two objects refer to the same match
</blockquote>

<p>
It is not really clear what this means: The current specification would allow for an
implementation to return <tt>true</tt>, only if the address values of <tt>m1</tt> and
<tt>m2</tt> are the same. While this approach is unproblematic in terms of used operations 
this is also a bit unsatisfactory. With identity equality alone there seems to be no convincing
reason to provide this operator at all. It could for example also refer to an comparison based
on iterator values. In this case a user should better know that this will be done, because 
there is no guarantee at all that inter-container comparison of iterators 
is a feasible operation. This was a clear outcome of the resolution provided in 
<a href= "http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2010/n3066.html">N3066</a> 
for LWG issue <a href= "http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-closed.html#446">446</a>.
It could also mean that a character-based comparison of the individual <tt>sub_match</tt>
elements should be done - this would be equivalent to applying <tt>operator==</tt> to
the subexpressions, prefix and suffix.
</p>

</discussion>

<resolution>
Addressed by paper <a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2010/n3158.html">n3158</a>.
</resolution>

</issue>
