<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="681" status="CD1">
<title>Operator functions impossible to compare are defined in [re.submatch.op]</title>
<section><sref ref="[re.submatch.op]"/></section>
<submitter>Nozomu Katoo</submitter>
<date>27 May 2007</date>

<discussion>
<p>
In <sref ref="[re.submatch.op]"/> of N2284, 
operator functions numbered 31-42 seem impossible to compare. E.g.: 
</p>

<blockquote>
<pre>
template &lt;class BiIter&gt;
   bool operator==(typename iterator_traits&lt;BiIter&gt;::value_type const&amp; lhs,
                    const sub_match&lt;BiIter&gt;&amp; rhs);
</pre>
<blockquote>
<p>
-31- <i>Returns:</i> <tt>lhs == rhs.str()</tt>.
</p>
</blockquote>
</blockquote>

<p>
When <tt>char*</tt> is used as <tt>BiIter</tt>, <tt>iterator_traits&lt;BiIter&gt;::value_type</tt> would be 
<tt>char</tt>, so that <tt>lhs == rhs.str()</tt> ends up comparing a <tt>char</tt> value and an object 
of <tt>std::basic_string&lt;char&gt;</tt>.  However, the behaviour of comparison between 
these two types is not defined in <sref ref="[string.nonmembers]"/> of N2284.
 This applies when <tt>wchar_t*</tt> is used as <tt>BiIter</tt>. 
</p>
</discussion>

<resolution>
<p>
Adopt the proposed resolution in
<a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2409.pdf">N2409</a>.
</p>
</resolution>

<note>
Kona (2007): The LWG adopted the proposed resolution of N2409 for this issue.
The LWG voted to accelerate this issue to Ready status to be voted into the WP at Kona.
</note>

</issue>
