<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="2164" status="New">
<title>What are the semantics of <tt>vector.emplace(vector.begin(), vector.back())</tt>?</title>
<section><sref ref="[alg.nth.element]"/></section>
<submitter>Howard Hinnant</submitter>
<date>7 Jul 2012</date>

<discussion>

<p>
Nikolay Ivchenkov recently brought the following example on the
<a href="https://groups.google.com/a/isocpp.org/d/topic/std-discussion/dhy23mDFXj4/discussion">std-discussion</a> 
newsgroup, asking whether the following program well-defined:
</p>
<blockquote><pre>
#include &lt;iostream&gt;
#include &lt;vector&gt;

int main()
{
  std::vector&lt;int&gt; v;
  v.reserve(4);
  v = { 1, 2, 3 };
  v.emplace(v.begin(), v.back());
  for (int x : v)
    std::cout &lt;&lt; x &lt;&lt; std::endl;
}
</pre></blockquote>
<p>
Nikolay Ivchenkov:
<p/>
I think that an implementation of <tt>vector</tt>'s 'emplace' should initialize an intermediate object with 
<tt>v.back()</tt> before any shifts take place, then perform all necessary shifts and finally replace the 
value pointed to by <tt>v.begin()</tt> with the value of the intermediate object. So, I would expect the 
following output:
</p>
<blockquote><pre>
3
1
2
3
</pre></blockquote>
<p>
GNU C++ 4.7.1 and GNU C++ 4.8.0 produce other results:
</p>
<blockquote><pre>
2
1
2
3
</pre></blockquote>
<p>
Howard Hinnant:
<p/>
LWG issue <iref ref="760"/> currently has status NAD Future. The future is now. Lack of us moving on this 
issue has created confusion as evidenced by the example presented above.
</p>

</discussion>

<resolution>
<p>
Add after <sref ref="[container.requirements]"/>/10:
</p>

<blockquote>
<p>This wording is relative to N3376.</p>

<p>
-10- Unless otherwise specified (see <sref ref="[associative.reqmts.except]"/>, <sref ref="[unord.req.except]"/>, 
<sref ref="[deque.modifiers]"/>, and <sref ref="[vector.modifiers]"/> all container types defined in this
Clause meet the following additional requirements:
<p/>
[&hellip;]
</p>
<p>
<ins>
-?- Objects bound to the function parameter pack of the <tt>emplace</tt> member function shall not be elements or 
sub-objects of elements of the container. No diagnostic required.
</ins>
</p>

</blockquote>


</resolution>

</issue>
