<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="1186" status="NAD Concepts">
<title>Forward list could model a stack</title>
<section><sref ref="[stack]"/></section>
<submitter>Alisdair Meredith</submitter>
<date>31 Jul 2009</date>

<discussion>
<p>
The library template <tt>forward_list</tt> could easily model the idea of a
<tt>stack</tt>, where the operations work on the front of the list rather than
the back.  However, the standard library <tt>stack</tt> adaptor cannot support
this.
</p>

<p>
It would be relatively easy to write a partial specialization for <tt>stack</tt>
to support <tt>forward_list</tt>, but that opens the question of which header to
place it in.  A much better solution would be to add a <tt>concept_map</tt> for
the <tt>StackLikeContainer</tt> concept to the <tt>&lt;forward_list&gt;</tt> header and then
everything just works, including a user's own further uses in a
stack-like context.
</p>

<p>
Therefore while I am submitting the issue now so that it is on record, I
<em>strongly recommend</em> we resolve as "NAD Concepts" as any non-concepts
based solution will be inferior to the final goal, and the feature is
not so compelling it must be supported ahead of the concepts-based
library.
</p>

<note>
2009-11-02 Howard adds:
</note>

<blockquote>
Moved to Tentatively NAD Concepts after 5 positive votes on c++std-lib.
</blockquote>
</discussion>

<rationale>
<p>
Any non-concepts based solution will be inferior to the final goal, and the
feature is not so compelling it must be supported ahead of the concepts-based
library.
</p>
</rationale>


<resolution>
</resolution>

</issue>
