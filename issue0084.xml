<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="84" status="NAD">
<title>Ambiguity with string::insert()</title>
<section><sref ref="[string.access]"/></section>
<submitter>Nico Josuttis</submitter>
<date>29 Sep 1998</date>

<discussion>
<p>If I try</p>
<pre>    s.insert(0,1,' ');</pre>

<p>&nbsp; I get an nasty ambiguity. It might be</p>
<pre>    s.insert((size_type)0,(size_type)1,(charT)' ');</pre>

<p>which inserts 1 space character at position 0, or</p>
<pre>    s.insert((char*)0,(size_type)1,(charT)' ')</pre>

<p>which inserts 1 space character at iterator/address 0 (bingo!), or</p>
<pre>    s.insert((char*)0, (InputIterator)1, (InputIterator)' ')</pre>

<p>which normally inserts characters from iterator 1 to iterator '
'. But according to 23.1.1.9 (the &quot;do the right thing&quot; fix)
it is equivalent to the second. However, it is still ambiguous,
because of course I mean the first!</p>
</discussion>

<rationale>
<p>Not a defect. The LWG believes this is a &quot;genetic
misfortune&quot; inherent in the design of string and thus not a
defect in the Standard as such .</p>
</rationale>
</issue>
