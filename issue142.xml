<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="142" status="TC1">
<title>lexicographical_compare complexity wrong</title>
<section><sref ref="[alg.lex.comparison]"/></section>
<submitter>Howard Hinnant</submitter>
<date>20 Jun 1999</date>

<discussion>
<p>The lexicographical_compare complexity is specified as:<br/>
<br/>
&nbsp;&nbsp;&nbsp;&nbsp; &quot;At most min((last1 - first1), (last2 - first2))
applications of the corresponding comparison.&quot;<br/>
<br/>
The best I can do is twice that expensive.</p>

<p>Nicolai Josuttis comments in lib-6862: You mean, to check for
equality you have to check both &lt; and &gt;? Yes, IMO you are
right! (and Matt states this complexity in his book)</p>

</discussion>

<resolution>
<p>Change <sref ref="[alg.lex.comparison]"/> complexity to:</p>
    <blockquote><p>
    At most <tt>2*min((last1 - first1), (last2 - first2))</tt>
    applications of the corresponding comparison.
    </p></blockquote>

<p>Change the example at the end of paragraph 3 to read:</p>
    <blockquote><p>
    [Example:<br/>
    <br/>
    &nbsp;&nbsp;&nbsp; for ( ; first1 != last1 &amp;&amp; first2 != last2 ;
    ++first1, ++first2) {<br/>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (*first1 &lt; *first2) return true;<br/>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (*first2 &lt; *first1) return false;<br/>
    &nbsp;&nbsp;&nbsp; }<br/>
    &nbsp;&nbsp;&nbsp; return first1 == last1 &amp;&amp; first2 != last2;<br/>
    &nbsp;&nbsp;&nbsp;<br/>
    --end example]
    </p></blockquote>
</resolution>
</issue>
