<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [
  <!ENTITY nbsp "&#160;">
] >

<issue num="1459" status="Open">
<title>[FCD] Overlapping evaluations are allowed</title>
<section><sref ref="[atomics.order]"/></section>
<submitter>Canada</submitter>
<date>25 Aug 2010</date>

<discussion>
<p><b>Addresses CA-21</b></p>

Overlapping evaluations are allowed<BR/>
29.3p8 states:<BR/>
"An atomic store shall only store a value that has
been computed from constants and program input values
by a finite sequence of program evaluations, such
that each evaluation observes the values of variables
as computed by the last prior assignment in the
sequence."<BR/>
... but 1.9p13 states:
"If A is not sequenced before B and B is not
sequenced before A, then A and B are unsequenced.
[ Note: The execution of unsequenced evaluations can
overlap. -end note ]"<BR/>
Overlapping executions can make it impossible to
construct the sequence described in 29.3p8. We are not
sure of the intention here and do not offer a suggestion for
change, but note that 29.3p8 is the condition that prevents
out-of-thin-air reads.<BR/>
For an example, suppose we have a function invocation
f(e1,e2). The evaluations of e1 and e2 can overlap.
Suppose that the evaluation of e1 writes y and reads x
whereas the evaluation of e2 reads y and writes x, with
reads-from edges as below (all this is within a single
thread).
<PRE>
 e1           e2
Wrlx y--   --Wrlx x
      rf\ /rf
         X
        / \
Rrlx x&lt;-   -&gt;Rrlx y
</PRE>
This seems like it should be allowed, but there seems to
be no way to produce a sequence of evaluations with the
property above.<BR/>
In more detail, here the two evaluations, e1 and e2, are
being executed as the arguments of a function and are
consequently not sequenced-before each other. In
practice we'd expect that they could overlap (as allowed
by 1.9p13), with the two writes taking effect before the two
reads. However, if we have to construct a linear order of
evaluations, as in 29.3p8, then the execution above is not
permited. Is that really intended?
</discussion>

<resolution>
Please clarify.
</resolution>

</issue>
