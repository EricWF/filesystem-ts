<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="1174" status="NAD Editorial">
<title>type property predicates</title>
<section><sref ref="[meta.unary.prop]"/></section>
<submitter>Jason Merrill</submitter>
<date>16 Jul 2009</date>

<discussion>
<p>
I've been implementing compiler support for <tt>is_standard_layout</tt>, and
noticed a few nits about <sref ref="[meta.unary.prop]"/>:
</p>

<ol>
<li>
There's no trait for "trivially copyable type", which is now the
property that lets you do bitwise copying of a type, and therefore seems
useful to be able to query.  <tt>has_trivial_assign</tt> &amp;&amp;
<tt>has_trivial_copy_constructor</tt> &amp;&amp; <tt>has_trivial_destructor</tt>
is similar, but
not identical, specifically with respect to const types.
</li>
<li>
<tt>has_trivial_copy_constructor</tt> and <tt>has_trivial_assign</tt> lack the "or an
array of such a class type" language that most other traits in that
section, including <tt>has_nothrow_copy_constructor</tt> and <tt>has_nothrow_assign</tt>,
have; this seems like an oversight.
</li>
</ol>

<note>
See the thread starting with c++std-lib-24420 for further discussion.
</note>

<note>
Addressed in <a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2009/n2947.html">N2947</a>.
</note>

<note>
2009-10 Santa Cruz:
</note>

<blockquote>
NAD Editorial.  Solved by
<a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2009/n2984.html">N2984</a>.
</blockquote>

</discussion>

<resolution>
<p>
</p>
</resolution>

</issue>
